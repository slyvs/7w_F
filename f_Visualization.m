%-------------------------------------------------------------------------------
% Beginning of file f_Visualization.m
%-------------------------------------------------------------------------------
%
%                P1        P2
%                |         |
%      P4        |         |         P3
%      |         |   DSI   |         |
%      |    S1   |    |    |    S2   |
%      |    |    |    |    |    |    |
%      |    |    |    |    |    |    |
% ------------------------------------------> wavelength(nm)
%      A4   A6   A1   A3   A2   A7   A5    
%      d    g    a    c    b    h    f
%     (A5) (A3) (A1) (A0) (A2) (A4) (A6) 
%
% Project : Calculation of nonlinear propagation in fiber for FOPA based PSA 
%           using 7-wave model
% FileName: f_Visualization.m
% Function: Visualization of FOPA-PSA simulation result
% Version : 
%   v0.0 @2015.03.20 created  by W.L. Xie 
%        Using the ordinary differential equation (ODE) of the evolution of 
%        the power and phase resolved from the field evolution of the CNLSE.
%
%   v0.1 @2015.12.15 modified by W.L. Xie
%        Directly using the 7 complex ODE of the field evolution.
% Describe: 
%   Simulatie signal gain and delta_Beta vs. pump-signal separation
%   Simulatie signal gain and delta_Beta vs. pump-signal relative phase
%-------------------------------------------------------------------------------

function f_Visualization( ...
  sig_g,    ...% Fig.01 Signal gain vs. PP_Separation
  pwr_evo,  ...% Fig.02 Power evolution vs. PP_Separation
  del_kappa,...% Fig.03 Total phase mismatch vs. PP_Separation
  sig_g_NPS,...% Fig.01 Signal gain vs. nonlineariy phase shift (rPL)
  PSER_PSGA,...% Fig.06 Phase-sensitive extinction ratio and gain asymetry
  PtA_TC,   ...% Fig.05 Phase-to-Amplitude transfer characteristic
  PtP_TC,   ...% Fig.07 Phase-to-Phase transfer characteristic
  PtT_TC_c  ...% Fig.08 Phase-to-Trajectory transfer characteristic in complex space
  )

%% Simulation paramters 

global c;
global SimMod;
global NLM;
global ExcSet;
global Exc;
global Nis;

%% Global varibles      

global beta_matrix;
global d_kappa_Lin;

global Var;
global Raw;
global Max;
global PCS;
global delta_beta
%% Visualizing the results 
switch SimMod.Wave_mode,
  case '3W1P', %
    switch SimMod.Scan_mode,
      case 'Center_Wavelength',
        switch SimMod.Scan_cond,
          case 'Normal',
          %% Fig.01
          
          % end of case 'Normal'
          %---------------------------------------------------------------------
          case 'Max_Min_Gain',
          %% Fig.01
            
          % end of case 'Max_Min_Gain'
          %---------------------------------------------------------------------
        end; % end of switch SimMod.Scan_cond 
      %--------------------------------------------------------------------
      case 'PP_Separation',    
        switch SimMod.Scan_cond,
          case 'Normal',
            %% Fig.01 signal gain & delta kappa vs. PP_Separation
            if sig_g && del_kappa,
              %%
              figure(01);
              set(gcf,'Position',[100 100 600 450]);
              hold on;
              
              [AX,H1,H2] = plotyy(L_Detuning, G_SI_Log(:,1), L_Detuning, delta_beta(5,:));
              
              set(H1,'LineStyle','-','Color','b','LineWidth',1.25);
              set(H2,'LineStyle','-','Color','m','LineWidth',1.25);
              
              set(AX(1),'xColor','k','yColor','b'); %
              set(AX(1),'xLim',[0,100],'xTick',(0.0:10.0:100.0));
              set(AX(1),'xTickLabel',sprintf('%03.1f|',get(gca,'xTick')), ...
                'FontName','Arial','FontSize',12,'FontWeight','bold');
              set(AX(1),'yLim',[-5.0,50.0],'yTick',(-10.0:5.0:100.0));
              
              set(AX(2),'xColor','k','yColor','m'); %
              set(AX(2),'xLim',[0,100],'xTick',(0.0:10.0:100.0));
              set(AX(2),'xTicklabel',sprintf('%03.1f|',get(gca,'xTick')), ...
                'FontName','Arial','FontSize',12,'FontWeight','bold');
              % set(AX(2), 'yLim', [0.00,-0.05], 'yTick',(-0.05:-0.01:0.00));
              
              grid on;
              xlabel('\lambda_{sig}-\lambda_{pump} (nm)', ...
                'FontName','Arial','FontSize',12,'FontWeight','bold');
              set(get(AX(1),'yLabel'),'String','Signal gain (dB)');
              set(get(AX(1),'yLabel'),'Color','b','FontName','Arial','FontSize',12,'FontWeight','bold');
              set(get(AX(2),'yLabel'),'String','\Delta\beta_0_5 (dB)');
              set(get(AX(2),'yLabel'),'Color','m','FontName','Arial','FontSize',12,'FontWeight','bold');
              
              if SimMod.FLD_nPWR, % simulation with field
                title({'Signal gain and \Delta\beta_{05}'; ...
                  'CM-ODE of Field, \delta\lambda_{ofs}=0, 7-wave model (Numerical)'}, ...
                  'FontName','Arial','FontSize',12,'FontWeight','bold');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR
              
              legend([H1,H2], ...
                {'Phase sensitive gain vs. \Delta\lambda'; ...
                '\Delta\beta_{05} vs. \Delta\lambda_{PP}'}, ...
                'FontName','Arial','FontSize',12,'FontWeight','bold','Location','Northeast');
            else % sig_g && del_kappa == 0,
              %
            end; % end of if-else sgdb_s
            %-------------------------------------------------------------------
            %% Fig.02 signal gain vs. PP_Separation 
            if sig_g,
              %%
              figure(02);
              set(gcf,'Position',[100 100 640 480]);
              hold on;
              f02     = zeros( 5, 1);
              f02(01) = plot(ExcSet.Dl_PPS_wl, Max.G_SI_max_m(:,1),...
                'Color',    'r',...
                'LineStyle',' -',...
                'LineWidth',1.25);
            % f02(02) = plot(ExcSet.Dl_PPS_wl, Max.G_SI_min_m(:,1),...
            %   'Color',    'b',...
            %   'LineStyle',' -',...
            %   'LineWidth',1.25);
              % 
              set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
                      'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
                      'yLim', [floor(min(Max.G_SI_max_m(:,1))), ceil(max(Max.G_SI_max_m(:,1)))],...
                      'yTick',[floor(min(Max.G_SI_max_m(:,1))):...
                               (ceil(max(Max.G_SI_max_m(:,1)))-floor(min(Max.G_SI_max_m(:,1))))/10:...
                                ceil(max(Max.G_SI_max_m(:,1)))],...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal');
              grid on;
              xlabel('\Delta\lambda_{PP} (nm)', ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal');
              ylabel('Signal gain (dB)', ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Signal gain vs. \Delta\lambda_{PP}'; ...
                  'CM-ODE of Field, \delta\lambda_{OFS}=0, 5-wave Numerical'}, ...
                  'FontName','Arial',...
                  'FontSize',12,...
                  'FontWeight','normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR
              % 
              legend([f02(01)], ...
               {'Signal gain \theta_{rel,Max}'},...
                'FontName','Arial',...
                'FontSize',10,...
                'FontWeight','normal',...
                'Location','Northeast');  
              %%
              saveas(gcf,['sig_g_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
                          '.fig']);
              print(gcf,'-dtiff','-r300',...
                         ['sig_g_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
                          '.tif']);
            else % sig_g == 0,
              %
            end; % end of if-else sig_g
            %-------------------------------------------------------------------
            %% Fig.03 Power evolution vs. PP_Separation 
            if pwr_evo, 
              %%
              figure(03);
              set(gcf,'Position',[700 100 600 800]);
              
              subplot(2,1,1);
              hold on;
              f03(01) = plot(ExcSet.Dl_PPS_wl,Max.P_P1_max(:,1),'-b','LineWidth',1.25);% P1
              f03(02) = plot(ExcSet.Dl_PPS_wl,Max.P_P2_max(:,1),'-g','LineWidth',1.25);% P2
              f03(03) = plot(ExcSet.Dl_PPS_wl,Max.P_SI_max(:,1),'-k','LineWidth',1.25);% SI 
              f03(04) = plot(ExcSet.Dl_PPS_wl,Max.P_P3_max(:,1),'-y','LineWidth',1.25);% P3 
              f03(05) = plot(ExcSet.Dl_PPS_wl,Max.P_P4_max(:,1),'-r','LineWidth',1.25);% P4
              f03(06) = plot(ExcSet.Dl_PPS_wl,Max.P_S1_max(:,1),'-m','LineWidth',1.25);% S1
              f03(07) = plot(ExcSet.Dl_PPS_wl,Max.P_S2_max(:,1),'-c','LineWidth',1.25);% S2
              
              set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
                      'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
                      'yLim', [- 80,   +25],...
                      'yTick',[- 80:10:+25],...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              grid on;
              xlabel('\Delta\lambda_{PP} (nm)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              ylabel('Signal gain (dB)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Power evolution vs. \Delta\lambda_{PP}'; ...
                  'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
                  'FontName','Arial','FontSize',12,'FontWeight','normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR 
              legend([f03(01),f03(02),f03(03),f03(04),f03(05),f03(06),f03(07)], ...
                {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal',...
                'Location','Southwest');
              
              subplot(2,1,2);
              hold on;
              f03(08) = plot(ExcSet.Dl_PPS_wl,Raw.P_P1_Log(:,1),'-b','LineWidth',1.25);% P1
              f03(09) = plot(ExcSet.Dl_PPS_wl,Raw.P_P2_Log(:,1),'-g','LineWidth',1.25);% P2
              f03(10) = plot(ExcSet.Dl_PPS_wl,Raw.P_SI_Log(:,1),'-k','LineWidth',1.25);% SI
              f03(11) = plot(ExcSet.Dl_PPS_wl,Raw.P_P3_Log(:,1),'-y','LineWidth',1.25);% P3
              f03(12) = plot(ExcSet.Dl_PPS_wl,Raw.P_P4_Log(:,1),'-r','LineWidth',1.25);% P4
              f03(13) = plot(ExcSet.Dl_PPS_wl,Raw.P_S1_Log(:,1),'-m','LineWidth',1.25);% S1
              f03(14) = plot(ExcSet.Dl_PPS_wl,Raw.P_S2_Log(:,1),'-c','LineWidth',1.25);% S2
              
              set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
                      'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
                      'yLim', [- 80,   +25],...
                      'yTick',[- 80:10:+25],...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              grid on;
              xlabel('\Delta\lambda_{PP} (nm)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              ylabel('Signal gain (dB)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Power evolution vs. \Delta\lambda_{PP}'; ...
                  'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
                  'FontName','Arial','FontSize',12,'FontWeight','normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR 
              legend([f03(01),f03(02),f03(03),f03(04),f03(05),f03(06),f03(07)], ...
                {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal',...
                'Location','Southwest');
            else % pwr_evo == 0,
              %
            end; % end of if-else pwr_evo
            %-------------------------------------------------------------------
            %% Fig.04 Phase mismatch vs. PP_Separation 
            if del_kappa,
              %%
              figure(04);
              set(gcf,'Position',[100 300 1000 750]);
              hold on;
              
            else % del_kappa == 0,
              
            end; % end of if-else del_kappa
            %-------------------------------------------------------------------
          % end of case 'Normal' in switch SimMod.Scan_cond
          %---------------------------------------------------------------------
          case 'Max_Min_Gain',
            % not valid in current version
          % end of case 'Max_Min_Gain' in switch SimMod.Scan_cond
          %----------------------------------------------------------------
        end; % end of switch SimMod.Scan_cond
      % end of case 'PP_Separation' in switch SimMod.Scan_mode
      %--------------------------------------------------------------------
      case 'Pump_Power',       
        switch SimMod.Scan_cond,
          case 'Normal',
            %% Fig.01 signal gain profile vs. NPS @ different separation 
            if sig_g,
              %%
              figure(01);
              set(gcf,'Position',[100 100 600 450]);
              hold on;
              
              f01     = zeros( 1, 1);
              f01(01) = plot(ExcSet.Dl_PPS_wl, Max.G_SI_max_m(:,1),...
                'Color',    'r',...
                'LineStyle',' -',...
                'LineWidth',1.25);
              f01(02) = plot(ExcSet.Dl_PPS_wl, Max.G_SI_zro_m(:,1),...
                'Color',    'b',...
                'LineStyle','--',...
                'LineWidth',1.25);
              set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
                      'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
                      'yLim', [floor(min(Max.G_SI_max_m(:,1))), ceil(max(Max.G_SI_max_m(:,1)))],...
                      'yTick',[floor(min(Max.G_SI_max_m(:,1))):...
                               (ceil(max(Max.G_SI_max_m(:,1)))-floor(min(Max.G_SI_max_m(:,1))))/10:...
                                ceil(max(Max.G_SI_max_m(:,1)))],...
                'Color',     'k',...
                'FontName',  'Arial',...
                'FontSize',  12,...
                'FontWeight','Normal');
              grid on;
              %
              xlabel('\Delta\lambda_{PP} (nm)', ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal');
              ylabel('Signal gain (dB)', ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Signal gain vs. \Delta\lambda_{PP}'; ...
                  'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
                  'FontName','Arial',...
                  'FontSize',12,...
                  'FontWeight','Normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR
              %
              legend([f01(01),f01(02)], ...
                {'Signal gain \theta_{rel,Max}',...
                 'Signal gain \theta_{rel,0}'}, ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal',...
                'Location','Northeast'); 
            else % sig_g == 0,
              %
            end; % end of if-else sig_g
            %-------------------------------------------------------------------
            %% Fig.02 Gmax/Gmin/PSER/PSGA vs. NPS(rPL) 
            if sig_g_NPS,
              %%
              figure(02);
              set(gcf,'Position',[100 100 600 375]);
              hold on;
              
            % rPL(:,1)= NLM.Gamma*(Exc.Pwr(:,1)+Exc.Pwr(:,2))*NLM.Len/pi; % rPL = NPS
              rPL(:,1)= NLM.Gamma*(Exc.Pwr(:,1)+Exc.Pwr(:,2))*NLM.Len   ; % rPL = NPS

              f02     = zeros(10,1);
            % f02(01) = plot(rPL(:,1),Max.G_SI_zro_m (:,1),' :k','LineWidth',1.25);
              f02(02) = plot(rPL(:,1),Max.G_SI_max_m (:,1),' -r','LineWidth',1.25);
              f02(03) = plot(rPL(:,1),Max.G_SI_min_m (:,1),' -b','LineWidth',1.25);
              f02(04) = plot(rPL(:,1),Max.G_SI_PSER_m(:,1),' -g','LineWidth',1.25);
              f02(05) = plot(rPL(:,1),Max.G_SI_PSGA_m(:,1),' -y','LineWidth',1.25);
              
            % f02(06) = plot(rPL(:,1),Max.G_SI_zro_m (:,2),' -r','LineWidth',1.25);
            % f02(07) = plot(rPL(:,1),Max.G_SI_max_m (:,2),'--r','LineWidth',1.25);
            % f02(08) = plot(rPL(:,1),Max.G_SI_min_m (:,2),'-.r','LineWidth',1.25);
            % f02(09) = plot(rPL(:,1),Max.G_SI_PSER_m(:,2),' :r','LineWidth',1.25);
            % f02(10) = plot(rPL(:,1),Max.G_SI_PSGA_m(:,2),' :r','LineWidth',1.25); 
            
            % f01(11) = plot(rPL(:,1),Max.G_SI_zro_m (:,3),' -g','LineWidth',1.25);
            % f01(12) = plot(rPL(:,1),Max.G_SI_max_m (:,3),'--g','LineWidth',1.25);
            % f01(13) = plot(rPL(:,1),Max.G_SI_min_m (:,3),'-.g','LineWidth',1.25);
            % f01(14) = plot(rPL(:,1),Max.G_SI_PSER_m(:,3),' :g','LineWidth',1.25);
            % f02(15) = plot(rPL(:,1),Max.G_SI_PSGA_m(:,3),' :r','LineWidth',1.25);  
            
%             set(gca,'xLim', [  0,                        ceil(rPL(end,1))],...
%                     'xTick',(  0.0: ceil(rPL(end,1))/5 : ceil(rPL(end,1))),...
              set(gca,'xLim', [  0,                        ceil(rPL(end,1))],...
                      'xTick',(  0.0: 0.5 : 15.5),...
                      'yLim', [- 50,    + 60],...
                      'yTick',[-100: 10:+100],...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal');
              grid on;
              % 
              xlabel('Nonlinear phase shift (\gammaPL) (rad)', ...
                'FontName',  'Arial',...
                'FontSize',  12,...
                'FontWeight','Normal');
              ylabel('Signal gain (dB)', ...
                'FontName',  'Arial',...
                'FontSize',  12,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Signal gain vs. Nonlinear phase shift (\gammaPL)'; ...
                 ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                              ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
                  'FontName','Arial',...
                  'FontSize',12,...
                  'FontWeight','Normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  %
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  %
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR
              %
            % f02(01),f02(02),f02(03),f02(04),f02(05),...
            % f02(06),f02(07),f02(08),f02(09),f02(10),...
            % f02(11),f02(12),f02(13),f02(14),f02(15),...   
              legend([f02(02),f02(03),f02(04),f02(05)], ...
               {... % '\theta_{rel,zero}';...
                '\theta_{rel,max}';...
                '\theta_{rel,min}';...
                'PSER';...
                'ASER'},...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal',...
                'Location','best'); % Northeast
            % 'Gmax \delta\lambda_{OFS}=-0.6nm';'Gmax \delta\lambda_{OFS}=0.15nm';'Gmax \delta\lambda_{OFS}=1.0nm';...
            % 'Gmin \delta\lambda_{OFS}=-0.6nm';'Gmin \delta\lambda_{OFS}=0.15nm';'Gmin \delta\lambda_{OFS}=1.0nm';...
            % 'GER  \delta\lambda_{OFS}=-0.6nm';'GER  \delta\lambda_{OFS}=0.15nm';'GER  \delta\lambda_{OFS}=1.0nm'  
              %%
              saveas(gcf,['NPS_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
                          '_PP=',       num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),...
                          '.fig']);
              print(gcf,'-dtiff','-r300',...
                         ['NPS_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
                          '_PP=',       num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),...
                          '.tif']);
            else % sig_g_NPS == 0,
              % 
            end; % end of if-else sig_g_NPS
            %-------------------------------------------------------------------
            %% Fig.03 Gmax/Gmin/PSER/PSGA vs. NPS(rPL) 
            if sig_g_NPS == 0,   
              %%
              figure(03);
              set(gcf,'Position',[100 300 600 450]);
              hold on;
              
            % rPL(:,1)= NLM.Gamma*2*Exc.Pwr(:,1)*NLM.Len/pi; % rPL = NPS
              rPL(:,1)= NLM.Gamma*2*Exc.Pwr(:,1)*NLM.Len   ; % rPL = NPS

              f03     = zeros(10,1);
              f03(01) = plot(rPL(:,1), Raw.G_SI_Log(1,:), ' :k','LineWidth',2);
              f03(02) = plot(rPL(:,1), Raw.G_SI_Log(2,:), '--b','LineWidth',2);
              f03(03) = plot(rPL(:,1), Raw.G_SI_Log(3,:), ' -r','LineWidth',2);
              f03(04) = plot(rPL(:,1), Raw.G_SI_Log(4,:), '-.c','LineWidth',2);
              f03(05) = plot(rPL(:,1), Raw.G_SI_Log(5,:), ' :m','LineWidth',2);
              f03(06) = plot(rPL(:,1), Raw.G_SI_Log(6,:), ' :y','LineWidth',2);

              set(gca,'xLim', [  0,         3],...
                      'xTick',(  0.0: 0.5 : 3),...
                      'yLim', [- 50,    + 50],...
                      'yTick',[-100: 10:+100],...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal');
              grid on;
              % 
              xlabel('Nonlinear phase shift (\gammaPL) (rad)', ...
                'FontName',  'Arial',...
                'FontSize',  12,...
                'FontWeight','Normal');
              ylabel('Signal gain (dB)', ...
                'FontName',  'Arial',...
                'FontSize',  12,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Signal gain vs. Nonlinear phase shift (\gammaPL)'; ...
                 ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                              ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
                  'FontName','Arial',...
                  'FontSize',12,...
                  'FontWeight','Normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  %
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  %
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR

              legend([f01(01),f01(02),f01(03),f01(04),f01(05),f01(06)], ...
               {['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
                ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
                ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
                ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
                ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
                ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal',...
                'Location','best'); 
            else % sig_g_NPS == 0,
              %
            end; % end of if-else sig_g_NPS
            %-------------------------------------------------------------------
            %% Fig.04 Power curve vs. PP_Separation                      
            if pwr_evo,
              %%
              figure(03);
              set(gcf,'Position',[700 100 600 800]);
              
              subplot(2,1,1);
              hold on;
              f03(01) = plot(ExcSet.Dl_PPS_wl,Max.P_P1_max(:,1),'-b','LineWidth',1.25);% P1
              f03(02) = plot(ExcSet.Dl_PPS_wl,Max.P_P2_max(:,1),'-g','LineWidth',1.25);% P2
              f03(03) = plot(ExcSet.Dl_PPS_wl,Max.P_SI_max(:,1),'-k','LineWidth',1.25);% SI 
              f03(04) = plot(ExcSet.Dl_PPS_wl,Max.P_P3_max(:,1),'-y','LineWidth',1.25);% P3 
              f03(05) = plot(ExcSet.Dl_PPS_wl,Max.P_P4_max(:,1),'-r','LineWidth',1.25);% P4
              f03(06) = plot(ExcSet.Dl_PPS_wl,Max.P_S1_max(:,1),'-m','LineWidth',1.25);% S1
              f03(07) = plot(ExcSet.Dl_PPS_wl,Max.P_S2_max(:,1),'-c','LineWidth',1.25);% S2
              
              set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
                      'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
                      'yLim', [- 80,   +25],...
                      'yTick',[- 80:10:+25],...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              grid on;
              xlabel('\Delta\lambda_{PP} (nm)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              ylabel('Signal gain (dB)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Power evolution vs. \Delta\lambda_{PP}'; ...
                  'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
                  'FontName','Arial','FontSize',12,'FontWeight','normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR 
              legend([f03(01),f03(02),f03(03),f03(04),f03(05),f03(06),f03(07)], ...
                {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal',...
                'Location','Southwest');
              
              subplot(2,1,2);
              hold on;
              f03(08) = plot(ExcSet.Dl_PPS_wl,Raw.P_P1_Log(:,1),'-b','LineWidth',1.25);% P1
              f03(09) = plot(ExcSet.Dl_PPS_wl,Raw.P_P2_Log(:,1),'-g','LineWidth',1.25);% P2
              f03(10) = plot(ExcSet.Dl_PPS_wl,Raw.P_SI_Log(:,1),'-k','LineWidth',1.25);% SI
              f03(11) = plot(ExcSet.Dl_PPS_wl,Raw.P_P3_Log(:,1),'-y','LineWidth',1.25);% P3
              f03(12) = plot(ExcSet.Dl_PPS_wl,Raw.P_P4_Log(:,1),'-r','LineWidth',1.25);% P4
              f03(13) = plot(ExcSet.Dl_PPS_wl,Raw.P_S1_Log(:,1),'-m','LineWidth',1.25);% S1
              f03(14) = plot(ExcSet.Dl_PPS_wl,Raw.P_S2_Log(:,1),'-c','LineWidth',1.25);% S2
              
              set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
                      'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
                      'yLim', [- 80,   +25],...
                      'yTick',[- 80:10:+25],...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              grid on;
              xlabel('\Delta\lambda_{PP} (nm)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              ylabel('Signal gain (dB)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Power evolution vs. \Delta\lambda_{PP}'; ...
                  'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
                  'FontName','Arial','FontSize',12,'FontWeight','normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR 
              legend([f03(01),f03(02),f03(03),f03(04),f03(05),f03(06),f03(07)], ...
                {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal',...
                'Location','Southwest');
            else % pwr_evo == 0,
              %
            end; % end of if-else pwr_evo
            %-------------------------------------------------------------------
          % end of case 'Normal' in switch SimMod.Scan_cond
          %----------------------------------------------------------------
          case 'Max_Min_Gain',
            %% Fig.02 7-wave phase-sensitive signal gain vs. signal phase   
            if PSER_PSGA == 1,
              %%
              figure(02);
              set(gcf,'Position',[100 300 600 450]);
              hold on;
              
              p_PSG     = zeros(5,1);
              
              p_PSG( 2) = plot(Phi_SI/pi, G_SI_Log(:,1),' -k','LineWidth',1.25);
              
              % set(gca, 'xLim', [0  ,50]);
              % set(gca, 'yLim', [-90,30]);
              set(gca,'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal');
              grid on;
              xlabel('\Delta\lambda_{PP} (nm)', ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal');
              ylabel('Signal gain (dB)', ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Signal gain vs. \Delta\lambda_{PP}'; ...
                  'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
                  'FontName','Arial',...
                  'FontSize',12,...
                  'FontWeight','normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR
              legend([f02(01)], ...
                {'Maximum signal gain'}, ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal',...
                'Location','Northeast');
              
              xlabel('Signal phase (\pi)', ...
                'FontName','Arial','FontSize',12,'FontWeight','bold');
              ylabel('Phase-sensitive gian (dB)', ...
                'FontName','Arial','FontSize',12,'FontWeight','bold');
              
              if PWR_nFLD == 1,
                if PSA_nPIA == 1,
                  title({'Phase-matching evolution in 7-wave model (Numerical)'; ...
                    '(CM-ODE of field, Wave separated and \Delta\beta calculated in \omega )'}, ...
                    'FontName','Arial','FontSize',12,'FontWeight','bold');
                else % PSA_nPIA == 0
                  title({'Phase-matching evolution in 7-wave model (Numerical)'; ...
                    '(CM-ODE of field, Wave separated and \Delta\beta calculated in \omega )'}, ...
                    'FontName','Arial','FontSize',12,'FontWeight','bold');
                end; % PSA_nPIA
              else % PWR_nFLD == 0,
                title({'Phase-sensitive gain in 7-wave model (Numerical)'; ...
                  '(CM-ODE of field, Wave separated and \Delta\beta calculated in \omega )'}, ...
                  'FontName','Arial','FontSize',12,'FontWeight','bold');
              end; % end of PWR_nFLD
              
              legend([p_PSG( 1),p_PSG( 2),p_PSG( 3)], ...
                {'\Delta\beta_{02}';'\Delta\beta_{04}'}, ...
                'FontName','Arial','FontSize',14,'FontWeight','bold','Location','Southwest');
              
            else % psg_rPL == 0
              
            end; % end of if-else psg_rPL
            %-----------------------------------------------------------------------
            %% Fig.08 7-wave complex output signal vs. rPL
            if PtT_TC_c == 1,
              %%
              figure(01);
              set(gcf,'Position',[100 300 600 550]);
              hold on;
              
              % re_SI_var = sqrt(P_SI_Lin)*cos(Phase_SI(1,:));
              % im_SI_var = sqrt(P_SI_Lin)*sin(Phase_SI(1,:));
              
              f04    = zeros(10,1);
              
              % plot_f08( 1)= plot(real(A_Var(:,3))./abs(A_SI),imag(A_Var(:,3))./abs(A_SI),' -b','LineWidth',1.25);
              % plot_f08( 2)= plot(real(A_Var(:,2))/abs(A_SI(2)),imag(A_SI_Var(:,2))/abs(A_SI(2)),'*-r','LineWidth',1.25);
              
              f04( 1)=plot((sqrt(P_SI)          *cos(Phi_SI)       )./(abs(A_SI)), ...
                (sqrt(P_SI)          *sin(Phi_SI)       )./(abs(A_SI)),' :k','LineWidth',1.25);
              f04( 2)=plot((sqrt(P_SI_Lin(1,:)).*cos(Phase_SI(1,:)))./(abs(A_SI)), ...
                (sqrt(P_SI_Lin(1,:)).*sin(Phase_SI(1,:)))./(abs(A_SI)),' -k','LineWidth',1.25);
              f04( 3)=plot((sqrt(P_SI_Lin(2,:)).*cos(Phase_SI(2,:)))./(abs(A_SI)), ...
                (sqrt(P_SI_Lin(2,:)).*sin(Phase_SI(2,:)))./(abs(A_SI)),' -b','LineWidth',1.25);
              f04( 4)=plot((sqrt(P_SI_Lin(3,:)).*cos(Phase_SI(3,:)))./(abs(A_SI)), ...
                (sqrt(P_SI_Lin(3,:)).*sin(Phase_SI(3,:)))./(abs(A_SI)),' -r','LineWidth',1.25);
              f04( 5)=plot((sqrt(P_SI_Lin(4,:)).*cos(Phase_SI(4,:)))./(abs(A_SI)), ...
                (sqrt(P_SI_Lin(4,:)).*sin(Phase_SI(4,:)))./(abs(A_SI)),' -g','LineWidth',1.25);
              f04( 6)=plot((sqrt(P_SI_Lin(5,:)).*cos(Phase_SI(5,:)))./(abs(A_SI)), ...
                (sqrt(P_SI_Lin(5,:)).*sin(Phase_SI(5,:)))./(abs(A_SI)),' -m','LineWidth',1.25);
              f04( 7)=plot((sqrt(P_SI_Lin(6,:)).*cos(Phase_SI(6,:)))./(abs(A_SI)), ...
                (sqrt(P_SI_Lin(6,:)).*sin(Phase_SI(6,:)))./(abs(A_SI)),' -y','LineWidth',1.25);
              
              % set(gca, 'xLim', [-15.0e-3, 15.0e-3], 'xTick',(-5.0e-3:1.0e-3:5.0e-3));
              % set(gca, 'yLim', [-15.0e-3, 15.0e-3], 'yTick',(-5.0e-3:1.0e-3:5.0e-3));
              set(gca, 'xLim', [-5.0, 5.0], 'xTick',(-5.0:1.0:5.0));
              set(gca, 'yLim', [-5.0, 5.0], 'yTick',(-5.0:1.0:5.0));
              set(gca,'FontName','Arial','FontSize',12,'FontWeight','bold');
              grid on;
              
              xlabel('Re (Normalized)', ...
                'FontName','Arial','FontSize',14,'FontWeight','bold');
              ylabel('Im (Normalized)', ...
                'FontName','Arial','FontSize',14,'FontWeight','bold');
              
              if PWR_nFLD == 1,
                if PSA_nPIA == 1,
                  title({'Complex output signal'; ...
                    'CM-ODE of field, 7-wave model (Numerical)'}, ...
                    'FontName','Arial','FontSize',14,'FontWeight','bold');
                else % PSA_nPIA == 0
                  title({'Complex output signal in 7-wave model (Numerical)'; ...
                    'CM-ODE of field, 7-wave model (Numerical)'}, ...
                    'FontName','Arial','FontSize',14,'FontWeight','bold');
                end; % PSA_nPIA
              else % PWR_nFLD == 0,
                title({'Complex output signal space trajectory'; ...
                  '\lambda_{sig}=\lambda_{ZD}, 7-wave model (Numerical)'}, ...
                  'FontName','Arial','FontSize',14,'FontWeight','bold');
              end; % end of PWR_nFLD
              
              legend([f04( 1),f04( 2),f04( 3),f04( 4),f04( 5),f04( 6),f04( 7)], ...
                { 'Input signal'; ...
                ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(1)*1e9,'%2.2f'),'nm']; ...
                ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(2)*1e9,'%2.2f'),'nm']; ...
                ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(3)*1e9,'%2.2f'),'nm']; ...
                ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(4)*1e9,'%2.2f'),'nm']; ...
                ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(5)*1e9,'%2.2f'),'nm']; ...
                ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(6)*1e9,'%2.2f'),'nm']},...
                'FontName','Arial','FontSize',12,'FontWeight','bold','Location','Southeast');
              
            else % cps_p == 0
              
            end; % end of if-else cps_p
            %------------------------------------------------------------------
            % end of case 'PP_Separation' in switch SimMod.Scan_mode
            %--------------------------------------------------------------------
          % end of case 'Max_Min_Gain' in switch SimMod.Scan_cond
          %----------------------------------------------------------------
        end; % end of switch SimMod.Scan_mode
        %-----------------------------------------------------------------------
      case 'Signal_Power',     
        %% Fig.01 signal gain vs. ratio of signal power / pump power
        if sig_g,
          %% if plot signal_gain
          figure(01);
          set(gcf,'Position',[100 100 600 450]);
          hold on;
          
          f01     = zeros(10, 1);
          
          f01(01) = plot(10*log10((Exc.Pwr(:,1)+Exc.Pwr(:,2))./Exc.Pwr(:,3)), Max.G_SI_max_m(:,1),...
            'Color',    [0.9 0.0 0.0],...
            'LineStyle',' -',...
            'LineWidth',1.25);
          f01(02) = plot(10*log10((Exc.Pwr(:,1)+Exc.Pwr(:,2))./Exc.Pwr(:,3)), Max.G_SI_min_m(:,1),...
            'Color',    [0.0 0.0 0.9],...
            'LineStyle',' -',...
            'LineWidth',1.25);
          f01(03) = plot(10*log10((Exc.Pwr(:,1)+Exc.Pwr(:,2))./Exc.Pwr(:,3)), Max.G_SI_PSER_m(:,1),...
            'Color',    [0.9 0.5 0.0],...
            'LineStyle',' -',...
            'LineWidth',1.25);
          f01(04) = plot(10*log10((Exc.Pwr(:,1)+Exc.Pwr(:,2))./Exc.Pwr(:,3)), Max.G_SI_PSGA_m(:,1),...
            'Color',    [0.0 0.5 0.0],...
            'LineStyle',' -',...
            'LineWidth',1.25);

        % set(gca,'xLim', [  0.0, 1.0],...
        %         'xTick',(- 1.0: 0.1 :+1.5),...
        %         'yLim', [floor(min(Max.G_SI_max_m(:,1)))-1, ceil(max(Max.G_SI_max_m(:,1)))+1],...
        %         'yTick',[floor(min(Max.G_SI_max_m(:,1)))-1:...
        %                  5.0:...
        %                   ceil(max(Max.G_SI_max_m(:,1)))+1],...
          set(gca,'xLim', [- 30.0,       + 20.0],...
                  'xTick',(- 50.0:  5.0 :+ 40.0),...
                  'yLim', [- 60.0,       + 60.0],...
                  'yTick',(-100.0: 10.0 :+100.0),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          %
          xlabel('P_{Signal}/P_{Pump}', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          ylabel('Signal gain (dB)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          %
          if SimMod.FLD_nPWR, % simulation with field
            title({'Signal gain vs. Signal power pump power ratio'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA

            else % SimMod.PSA_nPIA == 0, simulation in PIA

            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          %
          legend([f01(01),f01(02),f01(03),f01(04)], ...
            {'\theta_{rel,Max}',...
             '\theta_{rel,Min}',...
             'PSER',...
             'PSGA'}, ...
            'FontName','Arial',...
            'FontSize',10,...
            'FontWeight','Normal',...
            'Location','Northeast');  
        else % sig_g == 0,
          %
        end; % end of if-else sig_g
        %-----------------------------------------------------------------------
        %% Fig.02 Output power vs. ratio of signal power / pump power
        if sig_g,
          %% if plot signal_gain
          figure(02);
          set(gcf,'Position',[100 100 600 450]);
          hold on;
          
          f02     = zeros(10, 1);
          
          f02(01) = plot(10*log10((Exc.Pwr(:,1)+Exc.Pwr(:,2))./Exc.Pwr(:,3)), Max.P_P1_max(:,1),...
            'Color',    [0.9 0.0 0.0],...
            'LineStyle',' -',...
            'LineWidth',1.25);
          f02(02) = plot(10*log10((Exc.Pwr(:,1)+Exc.Pwr(:,2))./Exc.Pwr(:,3)), Max.P_P2_max(:,1),...
            'Color',    [0.0 0.0 0.9],...
            'LineStyle',' -',...
            'LineWidth',1.25);
          f02(03) = plot(10*log10((Exc.Pwr(:,1)+Exc.Pwr(:,2))./Exc.Pwr(:,3)), Max.P_SI_max(:,1),...
            'Color',    [0.9 0.5 0.0],...
            'LineStyle',' -',...
            'LineWidth',1.25);

          set(gca,'xLim', [- 30.0,       +  5.0],...
                  'xTick',(- 50.0:  5.0 :+ 10.0),...
                  'yLim', [- 50.0,       + 50.0],...
                  'yTick',(-100.0: 10.0 :+100.0),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          %
          xlabel('P_{Signal}/P_{Pump}', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          ylabel('P_{signal,output} (dBm)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          %
          if SimMod.FLD_nPWR, % simulation with field
            title({'Signal gain vs. Signal power pump power ratio'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA

            else % SimMod.PSA_nPIA == 0, simulation in PIA

            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          %
          legend([f02(01),f02(02),f02(03)], ...
            {'P_{output,sig}',...
             'P_{output,idl}',...
             'P_{output,pump}'}, ...
            'FontName','Arial',...
            'FontSize',10,...
            'FontWeight','Normal',...
            'Location','Northeast');  
        else % sig_g == 0,
          %
        end; % end of if-else sig_g
        %-----------------------------------------------------------------------
        %% Fig.02 Phase-to-Amplitude transfer characteristic  
        if PtA_TC,   
          %%
          figure(02);
          set(gcf,'Position',[100 300 600 450]);
          hold on;
          
          f02     = zeros(10,1);
          
          f02( 1) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(1,:),' -k','LineWidth',1.25);
        % f03( 2) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(2,:),' -b','LineWidth',1.25);
        % f03( 3) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(3,:),' -r','LineWidth',1.25);
        % f03( 4) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(4,:),' -g','LineWidth',1.25);
        % f03( 5) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(5,:),' -m','LineWidth',1.25);
        % f03( 6) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(6,:),' -y','LineWidth',1.25);
          
          set(gca,'xLim', [- 0.25,+ 2.25],...
                  'xTick',(- 0.5 : 0.25 :+ 2.5),...
                  'yLim', [floor(min(Raw.G_SI_Log(1,:)))-2, ceil(max(Raw.G_SI_Log(1,:)))+2],...
                  'yTick',(- 50.0 : 5.0 :+ 50.0),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          
          xlabel('Input signal phase (\pi)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          ylabel('Signal gain (dB)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Phase-to-Amplitude transfer characteristic'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA
              %
            else % SimMod.PSA_nPIA == 0, simulation in PIA
              %
            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          
%           legend([f03( 1),f03( 2),f03( 3),f03( 4),f03( 5),f03( 6)], ...
%            {['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
%             'FontName','Arial',...
%             'FontSize',12,...
%             'FontWeight','Normal',...
%             'Location','Best');

          legend([f02( 1)], ...
           {['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Best');
          
%           saveas(gcf,['PtA_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.fig']);
%           print(gcf,'-dtiff','-r300',...
%                      ['PtA_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.tif']);
        else % PtA_TC == 0
          % not defined
        end; % end of if-else PtA_TC
        %-----------------------------------------------------------------------
        %% Fig.03 Phase-to-Phase transfer characteristic      
        if PtP_TC, 
          %%
          figure(03);
          set(gcf,'Position',[100 300 600 450]);
          hold on;
          
          f03     = zeros(10,1);
          f03(01) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(1,:)/pi+1,' -k','LineWidth',1.25);
        % f03( 2) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(2,:)/pi+1,' -b','LineWidth',1.25);
        % f03( 3) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(3,:)/pi+1,' -r','LineWidth',1.25);
        % f03( 4) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(4,:)/pi+1,' -g','LineWidth',1.25);
        % f03( 5) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(5,:)/pi+1,' -m','LineWidth',1.25);
        % f03( 6) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(6,:)/pi+1,' -y','LineWidth',1.25);
          
          set(gca,'xLim', [- 0.25,+ 2.25],...
                  'xTick',(- 0.5 : 0.25 :+ 2.5),...
                  'yLim', [- 0.25,+ 2.25],...
                  'yTick',(- 0.5 : 0.25 :+ 2.5),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          
          xlabel('Input signal phase (\pi)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          ylabel('Output signal phase (\pi)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Phase-to-Phase transfer characteristic'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA
              %
            else % SimMod.PSA_nPIA == 0, simulation in PIA
              %
            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          
%           legend([f03( 1),f03( 2),f03( 3),f03( 4),f03( 5),f03( 6)], ...
%            {['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
%             'FontName','Arial',...
%             'FontSize',12,...
%             'FontWeight','Normal',...
%             'Location','Best');

          legend([f03( 1)], ...
           {['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Best');
          %%
%           saveas(gcf,['PtP_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.fig']);
%           print(gcf,'-dtiff','-r300',...
%                      ['PtP_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.tif']);
        else % PtP_TC  == 0
          % not defined
        end; % end of if-else PtP_TC
        %-----------------------------------------------------------------------
        %% Fig.04 Phase-to-Trajectory transfer characteristic 
        if PtT_TC_c, 
          %%
          figure(04);
          set(gcf,'Position',[100 300 600 450]);
          hold on;
          
          f04      = zeros(10,1);
          
        % re_SI_var = sqrt(P_SI_Lin)*cos(Phase_SI(1,:));
        % im_SI_var = sqrt(P_SI_Lin)*sin(Phase_SI(1,:));

        % f04( 1)= plot(real(A_Var(:,3))./abs(A_SI),imag(A_Var(:,3))./abs(A_SI),' -b','LineWidth',1.25);
        % f04( 2)= plot(real(A_Var(:,2))/abs(A_SI(2)),imag(A_SI_Var(:,2))/abs(A_SI(2)),'*-r','LineWidth',1.25);
          
          f04(01)=plot((sqrt(Exc.Pwr(1,3))     .*cos(Exc.Phi(:,3))     )./(abs(Exc.Fld(1,3))), ...
                       (sqrt(Exc.Pwr(1,3))     .*sin(Exc.Phi(:,3))     )./(abs(Exc.Fld(1,3))),' :k','LineWidth',1.25);
          f04(02)=plot((sqrt(Raw.P_SI_Lin(1,:)).*cos(Raw.Phase_SI(1,:)))./(abs(Exc.Fld(1,3))), ...
                       (sqrt(Raw.P_SI_Lin(1,:)).*sin(Raw.Phase_SI(1,:)))./(abs(Exc.Fld(1,3))),' -k','LineWidth',1.25);
%         f04(03)=plot((sqrt(P_SI_Lin(2,:)).*cos(Phase_SI(2,:)))./(abs(A_SI)), ...
%                      (sqrt(P_SI_Lin(2,:)).*sin(Phase_SI(2,:)))./(abs(A_SI)),' -b','LineWidth',1.25);
%         f04(04)=plot((sqrt(P_SI_Lin(3,:)).*cos(Phase_SI(3,:)))./(abs(A_SI)), ...
%                      (sqrt(P_SI_Lin(3,:)).*sin(Phase_SI(3,:)))./(abs(A_SI)),' -r','LineWidth',1.25);
%         f04(05)=plot((sqrt(P_SI_Lin(4,:)).*cos(Phase_SI(4,:)))./(abs(A_SI)), ...
%                      (sqrt(P_SI_Lin(4,:)).*sin(Phase_SI(4,:)))./(abs(A_SI)),' -g','LineWidth',1.25);
%         f04(06)=plot((sqrt(P_SI_Lin(5,:)).*cos(Phase_SI(5,:)))./(abs(A_SI)), ...
%                      (sqrt(P_SI_Lin(5,:)).*sin(Phase_SI(5,:)))./(abs(A_SI)),' -m','LineWidth',1.25);
%         f04(07)=plot((sqrt(P_SI_Lin(6,:)).*cos(Phase_SI(6,:)))./(abs(A_SI)), ...
%                      (sqrt(P_SI_Lin(6,:)).*sin(Phase_SI(6,:)))./(abs(A_SI)),' -y','LineWidth',1.25);
          
        % set(gca,'xLim', [-15.0e-3, 15.0e-3], 'xTick',(-5.0e-3:1.0e-3:5.0e-3));
        % set(gca,'yLim', [-15.0e-3, 15.0e-3], 'yTick',(-5.0e-3:1.0e-3:5.0e-3));
        % set(gca,'xLim', [-5.0, 5.0], 'xTick',(-5.0:1.0:5.0));
        % set(gca,'yLim', [-5.0, 5.0], 'yTick',(-5.0:1.0:5.0));
          set(gca,'xLim', [-ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3))))),...
                           +ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3)))))],...
                  'xTick',(-50.0 : 1.0 :+ 50.0),...
                  'yLim', [-ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3))))),...
                           +ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3)))))],...
                  'yTick',(-50.0 : 1.0 :+ 50.0),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          
          xlabel('Re (Normalized)', ...
            'FontName','Arial','FontSize',12,'FontWeight','Normal');
          ylabel('Im (Normalized)', ...
            'FontName','Arial','FontSize',12,'FontWeight','Normal');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Phase-to-Trajectory transfer characteristic in complex space'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA
              %
            else % SimMod.PSA_nPIA == 0, simulation in PIA
              %
            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          
%           legend([f04( 1),f04( 2),f04( 3),f04( 4),f04( 5),f04( 6),f04( 7)], ...
%             { 'Input signal'; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(1)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(2)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(3)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(4)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(5)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(6)*1e9,'%2.2f'),'nm']},...
%             'FontName','Arial','FontSize',12,'FontWeight','bold','Location','Southeast');
          legend([f04(01),f04(02)], ...
           {['Input signal'];...
            ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Best');
        else % PtP_TC  == 0
          % not defined
        end; % end of if-else PtP_TC
        %-----------------------------------------------------------------------
      %-------------------------------------------------------------------------        
      case 'Relative_Phase',   
        %% Fig.01 Signal gain vs. Signal phase 
        if PSER_PSGA,
          %%
          figure(05);
          set(gcf,'Position',[100 300 600 450]);
          hold on;
          
          plot_f05     = zeros(5,1);
          
          plot_f05( 1) = plot(Phi_SI/pi, G_SI_Log(1,:),' -k','LineWidth',1.25);
          plot_f05( 2) = plot(Phi_SI/pi, G_SI_Log(2,:),' -b','LineWidth',1.25);
          plot_f05( 3) = plot(Phi_SI/pi, G_SI_Log(3,:),' -r','LineWidth',1.25);
          plot_f05( 4) = plot(Phi_SI/pi, G_SI_Log(4,:),' -g','LineWidth',1.25);
          plot_f05( 5) = plot(Phi_SI/pi, G_SI_Log(5,:),' -m','LineWidth',1.25);
          plot_f05( 6) = plot(Phi_SI/pi, G_SI_Log(6,:),' -y','LineWidth',1.25);
          
          set(gca, 'xLim', [-0.5, 2]);
          % set(gca, 'yLim', [-90,30]);
          set(gca,'FontName','Arial','FontSize',12,'FontWeight','bold');
          
          grid on;
          
          xlabel('Input signal phase (\pi)', ...
            'FontName','Arial','FontSize',12,'FontWeight','bold');
          ylabel('Phase-sensitive gian (dB)', ...
            'FontName','Arial','FontSize',12,'FontWeight','bold');
          
          if PWR_nFLD == 1,
            if PSA_nPIA == 1,
              title({'Phase-to-Amplitude transfer function '; ...
                'CM-ODE of power and phase, 7-wave model (Numerical)'}, ...
                'FontName','Arial','FontSize',14,'FontWeight','bold');
            else % PSA_nPIA == 0
              title({'Phase-to-Amplitude transfer function '; ...
                'CM-ODE of power and phase, 7-wave model (Numerical)'}, ...
                'FontName','Arial','FontSize',14,'FontWeight','bold');
            end; % PSA_nPIA
          else % PWR_nFLD == 0,
            title({'Phase-to-Amplitude transfer function'; ...
              '\lambda_{sig}=\lambda_{ZD}, 7-wave model (Numerical)'}, ...
              'FontName','Arial','FontSize',14,'FontWeight','bold');
          end; % end of PWR_nFLD
          
          legend([plot_f05( 1),plot_f05( 2),plot_f05( 3),plot_f05( 4),plot_f05( 5),plot_f05( 6)], ...
            {['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(1)*1e9,'%2.2f'),'nm']; ...
            ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(2)*1e9,'%2.2f'),'nm']; ...
            ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(3)*1e9,'%2.2f'),'nm']; ...
            ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(4)*1e9,'%2.2f'),'nm']; ...
            ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(5)*1e9,'%2.2f'),'nm']; ...
            ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(6)*1e9,'%2.2f'),'nm']},...
            'FontName','Arial','FontSize',12,'FontWeight','bold','Location','Southeast');
          
        else % psg_sp == 0
          %
        end; % end of if-else pssg_sp
        %-----------------------------------------------------------------------
        %% Fig.02 Phase-to-Amplitude transfer characteristic  
        if PtA_TC,   
          %%
          figure(02);
          set(gcf,'Position',[100 300 600 450]);
          hold on;
          
          f02     = zeros(10,1);
          
          f02( 1) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(1,:),' -k','LineWidth',1.25);
        % f03( 2) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(2,:),' -b','LineWidth',1.25);
        % f03( 3) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(3,:),' -r','LineWidth',1.25);
        % f03( 4) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(4,:),' -g','LineWidth',1.25);
        % f03( 5) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(5,:),' -m','LineWidth',1.25);
        % f03( 6) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(6,:),' -y','LineWidth',1.25);
          
          set(gca,'xLim', [- 0.25,+ 2.25],...
                  'xTick',(- 0.5 : 0.25 :+ 2.5),...
                  'yLim', [floor(min(Raw.G_SI_Log(1,:)))-2, ceil(max(Raw.G_SI_Log(1,:)))+2],...
                  'yTick',(- 50.0 : 5.0 :+ 50.0),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          
          xlabel('Input signal phase (\pi)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          ylabel('Signal gain (dB)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Phase-to-Amplitude transfer characteristic'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA
              %
            else % SimMod.PSA_nPIA == 0, simulation in PIA
              %
            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          
%           legend([f03( 1),f03( 2),f03( 3),f03( 4),f03( 5),f03( 6)], ...
%            {['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
%             'FontName','Arial',...
%             'FontSize',12,...
%             'FontWeight','Normal',...
%             'Location','Best');

          legend([f02( 1)], ...
           {['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Best');
          
%           saveas(gcf,['PtA_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.fig']);
%           print(gcf,'-dtiff','-r300',...
%                      ['PtA_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.tif']);
        else % PtA_TC == 0
          % 
        end; % end of if-else PtA_TC
        %-----------------------------------------------------------------------
        %% Fig.03 Phase-to-Phase transfer characteristic      
        if PtP_TC, 
          %%
          figure(03);
          set(gcf,'Position',[100 300 600 450]);
          hold on;
          
          f03     = zeros(10,1);
          f03(01) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(1,:)/pi+1,' -k','LineWidth',1.25);
        % f03( 2) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(2,:)/pi+1,' -b','LineWidth',1.25);
        % f03( 3) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(3,:)/pi+1,' -r','LineWidth',1.25);
        % f03( 4) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(4,:)/pi+1,' -g','LineWidth',1.25);
        % f03( 5) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(5,:)/pi+1,' -m','LineWidth',1.25);
        % f03( 6) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(6,:)/pi+1,' -y','LineWidth',1.25);
          
          set(gca,'xLim', [- 0.25,+ 2.25],...
                  'xTick',(- 0.5 : 0.25 :+ 2.5),...
                  'yLim', [- 0.25,+ 2.25],...
                  'yTick',(- 0.5 : 0.25 :+ 2.5),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          
          xlabel('Input signal phase (\pi)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          ylabel('Output signal phase (\pi)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Phase-to-Phase transfer characteristic'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA
              %
            else % SimMod.PSA_nPIA == 0, simulation in PIA
              %
            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          
%           legend([f03( 1),f03( 2),f03( 3),f03( 4),f03( 5),f03( 6)], ...
%            {['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
%             'FontName','Arial',...
%             'FontSize',12,...
%             'FontWeight','Normal',...
%             'Location','Best');

          legend([f03( 1)], ...
           {['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Best');
          
%           saveas(gcf,['PtP_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.fig']);
%           print(gcf,'-dtiff','-r300',...
%                      ['PtP_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.tif']);
        else % PtP_TC  == 0
          % 
        end; % end of if-else PtP_TC
        %-----------------------------------------------------------------------
        %% Fig.04 Phase-to-Trajectory transfer characteristic 
        if PtT_TC_c, 
          %%
          figure(04);
          set(gcf,'Position',[100 300 600 450]);
          hold on;
          
          f04      = zeros(10,1);
          
          % re_SI_var = sqrt(P_SI_Lin)*cos(Phase_SI(1,:));
          % im_SI_var = sqrt(P_SI_Lin)*sin(Phase_SI(1,:));
          
          % f04( 1)= plot(real(A_Var(:,3))./abs(A_SI),imag(A_Var(:,3))./abs(A_SI),' -b','LineWidth',1.25);
          % f04( 2)= plot(real(A_Var(:,2))/abs(A_SI(2)),imag(A_SI_Var(:,2))/abs(A_SI(2)),'*-r','LineWidth',1.25);
          
          f04(01)=plot((sqrt(Exc.Pwr(1,3))     .*cos(Exc.Phi(:,3))     )./(abs(Exc.Fld(1,3))), ...
                       (sqrt(Exc.Pwr(1,3))     .*sin(Exc.Phi(:,3))     )./(abs(Exc.Fld(1,3))),' :k','LineWidth',1.25);
          f04(02)=plot((sqrt(Raw.P_SI_Lin(1,:)).*cos(Raw.Phase_SI(1,:)))./(abs(Exc.Fld(1,3))), ...
                       (sqrt(Raw.P_SI_Lin(1,:)).*sin(Raw.Phase_SI(1,:)))./(abs(Exc.Fld(1,3))),' -k','LineWidth',1.25);
%           f04(03)=plot((sqrt(P_SI_Lin(2,:)).*cos(Phase_SI(2,:)))./(abs(A_SI)), ...
%                        (sqrt(P_SI_Lin(2,:)).*sin(Phase_SI(2,:)))./(abs(A_SI)),' -b','LineWidth',1.25);
%           f04(04)=plot((sqrt(P_SI_Lin(3,:)).*cos(Phase_SI(3,:)))./(abs(A_SI)), ...
%                        (sqrt(P_SI_Lin(3,:)).*sin(Phase_SI(3,:)))./(abs(A_SI)),' -r','LineWidth',1.25);
%           f04(05)=plot((sqrt(P_SI_Lin(4,:)).*cos(Phase_SI(4,:)))./(abs(A_SI)), ...
%                        (sqrt(P_SI_Lin(4,:)).*sin(Phase_SI(4,:)))./(abs(A_SI)),' -g','LineWidth',1.25);
%           f04(06)=plot((sqrt(P_SI_Lin(5,:)).*cos(Phase_SI(5,:)))./(abs(A_SI)), ...
%                        (sqrt(P_SI_Lin(5,:)).*sin(Phase_SI(5,:)))./(abs(A_SI)),' -m','LineWidth',1.25);
%           f04(07)=plot((sqrt(P_SI_Lin(6,:)).*cos(Phase_SI(6,:)))./(abs(A_SI)), ...
%                        (sqrt(P_SI_Lin(6,:)).*sin(Phase_SI(6,:)))./(abs(A_SI)),' -y','LineWidth',1.25);
          
        % set(gca, 'xLim', [-15.0e-3, 15.0e-3], 'xTick',(-5.0e-3:1.0e-3:5.0e-3));
        % set(gca, 'yLim', [-15.0e-3, 15.0e-3], 'yTick',(-5.0e-3:1.0e-3:5.0e-3));
        % set(gca, 'xLim', [-5.0, 5.0], 'xTick',(-5.0:1.0:5.0));
        % set(gca, 'yLim', [-5.0, 5.0], 'yTick',(-5.0:1.0:5.0));
          
          set(gca,'xLim', [-ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3))))),...
                           +ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3)))))],...
                  'xTick',(-50.0 : 1.0 :+ 50.0),...
                  'yLim', [-ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3))))),...
                           +ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3)))))],...
                  'yTick',(-50.0 : 1.0 :+ 50.0),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          
          xlabel('Re (Normalized)', ...
            'FontName','Arial','FontSize',12,'FontWeight','bold');
          ylabel('Im (Normalized)', ...
            'FontName','Arial','FontSize',12,'FontWeight','bold');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Phase-to-Trajectory transfer characteristic in complex space'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA
              %
            else % SimMod.PSA_nPIA == 0, simulation in PIA
              %
            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          
%           legend([f04( 1),f04( 2),f04( 3),f04( 4),f04( 5),f04( 6),f04( 7)], ...
%             { 'Input signal'; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(1)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(2)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(3)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(4)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(5)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(6)*1e9,'%2.2f'),'nm']},...
%             'FontName','Arial','FontSize',12,'FontWeight','bold','Location','Southeast');
          legend([f04(01),f04(02)], ...
           {['Input signal'];...
            ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Best');
        else % PtP_TC  == 0
          % 
        end; % end of if-else PtP_TC
        %-----------------------------------------------------------------------
      %-------------------------------------------------------------------------
      case 'Propagation_Z',  
        %% Fig.01 Signal gain vs. Propagated length     
        if sig_g,
          %%
          figure(01);
          set(gcf,'Position',[100 300 600 450]);
          hold on;

          f01(01) = plot(ExcSet.PropZ_Len, Max.Pwr_P1_Log(4,:),'-b','LineWidth',1.2);
          f01(02) = plot(ExcSet.PropZ_Len, Max.Pwr_P2_Log(4,:),':g','LineWidth',1.2);
          f01(03) = plot(ExcSet.PropZ_Len, Max.Pwr_SI_Log(4,:),'-k','LineWidth',1.2);
          f01(04) = plot(ExcSet.PropZ_Len, Max.Pwr_P3_Log(4,:),'-y','LineWidth',1.2);
          f01(05) = plot(ExcSet.PropZ_Len, Max.Pwr_P4_Log(4,:),':r','LineWidth',1.2);
          f01(06) = plot(ExcSet.PropZ_Len, Max.Pwr_S1_Log(4,:),'-m','LineWidth',1.2);
          f01(07) = plot(ExcSet.PropZ_Len, Max.Pwr_S2_Log(4,:),':c','LineWidth',1.2);

          set(gca, 'xLim', [   0, HNLF.Len]);
          set(gca, 'yLim', [-120, 30]);
          set(gca,'FontName','Arial','FontSize',12,'FontWeight','bold');
          grid on;

          xlabel('Propagated length (m)', ...
            'FontName','Arial','FontSize',12,'FontWeight','Normal');
          ylabel('Power (dBm)', ...
            'FontName','Arial','FontSize',12,'FontWeight','Normal');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Power evolution along fiber'; ...
              'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
              'FontName','Arial',...
              'FontSize',12,...
              'FontWeight','normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA

            else % SimMod.PSA_nPIA == 0, simulation in PIA

            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          % 
          legend([f01(01),f01(02),f01(03),f01(04),f01(05),f01(06),f01(07)], ...
            {'P1';'P2';'S0';'P3';'P4';'S1';'S2'}, ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Southeast');
        else
          %
        end; % end of if-else signal gain
        %-----------------------------------------------------------------------
        %% Fig.02 Power evolution vs. Propagated length 
        if pwr_evo,
          %%
          figure(02);
          set(gcf,'Position',[700 100 600 375]);
          hold on;
          
          f02(01) = plot(ExcSet.PropZ_Len./NLM.Len,Max.P_P1_max_z(1,:),'-b','LineWidth',1.25);% P1
          f02(02) = plot(ExcSet.PropZ_Len./NLM.Len,Max.P_P2_max_z(1,:),'-g','LineWidth',1.25);% P2
          f02(03) = plot(ExcSet.PropZ_Len./NLM.Len,Max.P_SI_max_z(1,:),'-k','LineWidth',1.25);% SI
          f02(04) = plot(ExcSet.PropZ_Len./NLM.Len,Max.P_P3_max_z(1,:),'-r','LineWidth',1.25);% P3
          f02(05) = plot(ExcSet.PropZ_Len./NLM.Len,Max.P_P4_max_z(1,:),'-y','LineWidth',1.25);% P4
          f02(06) = plot(ExcSet.PropZ_Len./NLM.Len,Max.P_S1_max_z(1,:),'-m','LineWidth',1.25);% S1
          f02(07) = plot(ExcSet.PropZ_Len./NLM.Len,Max.P_S2_max_z(1,:),'-c','LineWidth',1.25);% S2
          
          set(gca,'xLim', [   0.0,        10.0],...
                  'xTick',(   0.0:  1.0:  10.0),...
                  'yLim', [- 80.0,      + 30.0],...
                  'yTick',(- 90.0: 10.0:+ 30.0),...
            'FontName','Arial',...
            'FontSize',10.5,...
            'FontWeight','Normal');
          grid on;
          xlabel('Normalized propagation Z', ...
            'FontName','Arial',...
            'FontSize',11.0,...
            'FontWeight','Normal');
          ylabel('Power (dB)', ...
            'FontName','Arial',...
            'FontSize',11.0,...
            'FontWeight','Normal');
          if SimMod.FLD_nPWR, % simulation with field
            title({'Power evolution vs. Propagated length'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',09.0,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA
              % 
            else % SimMod.PSA_nPIA == 0, simulation in PIA
              % 
            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          legend([f02(01),f02(02),f02(03),f02(04),f02(05),f02(06),f02(07)], ...
            {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
            'FontName','Arial',...
            'FontSize',10.0,...
            'FontWeight','Normal',...
            'Location','Best');
          %%
        % saveas(gcf,['PropZ_Pevo_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
        %             '_PP=',              num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),...
        %             '.fig']);
        % print(gcf,'-dtiff','-r300',...
        %            ['PropZ_Pevo_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
        %             '_PP=',              num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),...
        %             '.tif']);

%           subplot(2,1,2);
%           hold on;
%           f03(08) = plot(ExcSet.Dl_PPS_wl,Raw.P_P1_Log(:,1),'-b','LineWidth',1.25);% P1
%           f03(09) = plot(ExcSet.Dl_PPS_wl,Raw.P_P2_Log(:,1),'-g','LineWidth',1.25);% P2
%           f03(10) = plot(ExcSet.Dl_PPS_wl,Raw.P_SI_Log(:,1),'-k','LineWidth',1.25);% SI
%           f03(11) = plot(ExcSet.Dl_PPS_wl,Raw.P_P3_Log(:,1),'-y','LineWidth',1.25);% P3
%           f03(12) = plot(ExcSet.Dl_PPS_wl,Raw.P_P4_Log(:,1),'-r','LineWidth',1.25);% P4
%           f03(13) = plot(ExcSet.Dl_PPS_wl,Raw.P_S1_Log(:,1),'-m','LineWidth',1.25);% S1
%           f03(14) = plot(ExcSet.Dl_PPS_wl,Raw.P_S2_Log(:,1),'-c','LineWidth',1.25);% S2
%           
%           set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
%             'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
%             'yLim', [- 80,   +25],...
%             'yTick',[- 80:10:+25],...
%             'FontName','Arial',...
%             'FontSize',14,...
%             'FontWeight','normal');
%           grid on;
%           xlabel('\Delta\lambda_{PP} (nm)', ...
%             'FontName','Arial',...
%             'FontSize',14,...
%             'FontWeight','normal');
%           ylabel('Signal gain (dB)', ...
%             'FontName','Arial',...
%             'FontSize',14,...
%             'FontWeight','normal');
%           if SimMod.FLD_nPWR, % simulation with field
%             title({'Power evolution vs. \Delta\lambda_{PP}'; ...
%               'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
%               'FontName','Arial','FontSize',12,'FontWeight','normal');
%           else % SimMod.FLD_nPWR == 0, simulation with power and phase
%             if SimMod.PSA_nPIA, % simulation in PSA
%               
%             else % SimMod.PSA_nPIA == 0, simulation in PIA
%               
%             end; % SimMod.PSA_nPIA
%           end; % if-else SimMod.FLD_nPWR
%           legend([f02(01),f02(02),f02(03),f02(04),f02(05),f02(06),f02(07)], ...
%             {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
%             'FontName','Arial',...
%             'FontSize',10.0,...
%             'FontWeight','Normal',...
%             'Location','Southwest');
        else % pwr_evo == 0,
          %
        end; % end of if-else pwr_evo
        %-----------------------------------------------------------------------
        %% Fig.03 Signal gain vs. Propagated length and signal phase 3D
        if 1,
          %%
        else
          %
        end; % end of if-else 
        %-----------------------------------------------------------------------
    end; % end of switch SimMod.Scan_mode
  % end of case '3W1P' in switch SimMod.Wave_mode
  %-----------------------------------------------------------------------------
  case '3W2P', %
    switch SimMod.Scan_mode,
      case 'Cen_Wavelength', 
        switch SimMod.Scan_cond,
          case 'Normal',
          %% Fig.01
          
          % end of case 'Normal'
          %---------------------------------------------------------------------
          case 'Max_Min_Gain',
          %% Fig.01
            
          % end of case 'Max_Min_Gain'
          %---------------------------------------------------------------------
        end; % end of switch SimMod.Scan_cond 
      %--------------------------------------------------------------------
      case 'PP_Separation',  
        switch SimMod.Scan_cond,
          case 'Normal',
            %% Fig.01 signal gain & delta kappa vs. PP_Separation
            if sig_g && del_kappa,
              %%
              figure(01);
              set(gcf,'Position',[100 100 600 450]);
              hold on;
              
              L_Detuning = (1/2)*(c/ExcSet.Sc_PPS_fq)
              [AX,H1,H2] = plotyy(L_Detuning, Raw.G_SI_Log(:,1), L_Detuning,delta_beta(:,1));
              
              set(H1,'LineStyle','-','Color','b','LineWidth',1.25);
              set(H2,'LineStyle','-','Color','m','LineWidth',1.25);
              
              set(AX(1),'xColor','k','yColor','b'); %
              set(AX(1),'xLim',[0,100],'xTick',(0.0:10.0:100.0));
              set(AX(1),'xTickLabel',sprintf('%03.1f|',get(gca,'xTick')), ...
                'FontName','Arial','FontSize',12,'FontWeight','bold');
              set(AX(1),'yLim',[-5.0,50.0],'yTick',(-10.0:5.0:100.0));
              
              set(AX(2),'xColor','k','yColor','m'); %
              set(AX(2),'xLim',[0,100],'xTick',(0.0:10.0:100.0));
              set(AX(2),'xTicklabel',sprintf('%03.1f|',get(gca,'xTick')), ...
                'FontName','Arial','FontSize',12,'FontWeight','bold');
              % set(AX(2), 'yLim', [0.00,-0.05], 'yTick',(-0.05:-0.01:0.00));
              
              grid on;
              xlabel('\lambda_{sig}-\lambda_{pump} (nm)', ...
                'FontName','Arial','FontSize',12,'FontWeight','bold');
              set(get(AX(1),'yLabel'),'String','Signal gain (dB)');
              set(get(AX(1),'yLabel'),'Color','b','FontName','Arial','FontSize',12,'FontWeight','bold');
              set(get(AX(2),'yLabel'),'String','\Delta\beta_0_5 (dB)');
              set(get(AX(2),'yLabel'),'Color','m','FontName','Arial','FontSize',12,'FontWeight','bold');
              
              if SimMod.FLD_nPWR, % simulation with field
                title({'Signal gain and \Delta\beta_{05}'; ...
                  'CM-ODE of Field, \delta\lambda_{ofs}=0, 7-wave model (Numerical)'}, ...
                  'FontName','Arial','FontSize',12,'FontWeight','bold');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR
              
              legend([H1,H2], ...
                {'Phase sensitive gain vs. \Delta\lambda'; ...
                '\Delta\beta_{05} vs. \Delta\lambda_{PP}'}, ...
                'FontName','Arial','FontSize',12,'FontWeight','bold','Location','Northeast');
            else % sig_g && del_kappa == 0,
              %
            end; % end of if-else sgdb_s
            %-------------------------------------------------------------------
            %% Fig.02 signal gain vs. PP_Separation 
            if sig_g,
              %%
              figure(02);
              set(gcf,'Position',[100 100 640 480]);
              hold on;
              f02     = zeros( 5, 1);
              f02(01) = plot(ExcSet.Dl_PPS_wl, Max.G_SI_max_m(:,1),...
                'Color',    'r',...
                'LineStyle',' -',...
                'LineWidth',1.25);
            % f02(02) = plot(ExcSet.Dl_PPS_wl, Max.G_SI_min_m(:,1),...
            %   'Color',    'b',...
            %   'LineStyle',' -',...
            %   'LineWidth',1.25);
              % 
              set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
                      'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
                      'yLim', [floor(min(Max.G_SI_max_m(:,1))), ceil(max(Max.G_SI_max_m(:,1)))],...
                      'yTick',[floor(min(Max.G_SI_max_m(:,1))):...
                               (ceil(max(Max.G_SI_max_m(:,1)))-floor(min(Max.G_SI_max_m(:,1))))/10:...
                                ceil(max(Max.G_SI_max_m(:,1)))],...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal');
              grid on;
              xlabel('\Delta\lambda_{PP} (nm)', ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal');
              ylabel('Signal gain (dB)', ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Signal gain vs. \Delta\lambda_{PP}'; ...
                  'CM-ODE of Field, \delta\lambda_{OFS}=0, 5-wave Numerical'}, ...
                  'FontName','Arial',...
                  'FontSize',12,...
                  'FontWeight','normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR
              % 
              legend([f02(01)], ...
               {'Signal gain \theta_{rel,Max}'},...
                'FontName','Arial',...
                'FontSize',10,...
                'FontWeight','normal',...
                'Location','Northeast');  
              %%
              saveas(gcf,['sig_g_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
                          '.fig']);
              print(gcf,'-dtiff','-r300',...
                         ['sig_g_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
                          '.tif']);
            else % sig_g == 0,
              %
            end; % end of if-else sig_g
            %-------------------------------------------------------------------
            %% Fig.03 Power evolution vs. PP_Separation 
            if pwr_evo, 
              %%
              figure(03);
              set(gcf,'Position',[700 100 600 800]);
              
              subplot(2,1,1);
              hold on;
              f03(01) = plot(ExcSet.Dl_PPS_wl,Max.P_P1_max(:,1),'-b','LineWidth',1.25);% P1
              f03(02) = plot(ExcSet.Dl_PPS_wl,Max.P_P2_max(:,1),'-g','LineWidth',1.25);% P2
              f03(03) = plot(ExcSet.Dl_PPS_wl,Max.P_SI_max(:,1),'-k','LineWidth',1.25);% SI 
              f03(04) = plot(ExcSet.Dl_PPS_wl,Max.P_P3_max(:,1),'-y','LineWidth',1.25);% P3 
              f03(05) = plot(ExcSet.Dl_PPS_wl,Max.P_P4_max(:,1),'-r','LineWidth',1.25);% P4
              f03(06) = plot(ExcSet.Dl_PPS_wl,Max.P_S1_max(:,1),'-m','LineWidth',1.25);% S1
              f03(07) = plot(ExcSet.Dl_PPS_wl,Max.P_S2_max(:,1),'-c','LineWidth',1.25);% S2
              
              set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
                      'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
                      'yLim', [- 80,   +25],...
                      'yTick',[- 80:10:+25],...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              grid on;
              xlabel('\Delta\lambda_{PP} (nm)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              ylabel('Signal gain (dB)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Power evolution vs. \Delta\lambda_{PP}'; ...
                  'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
                  'FontName','Arial','FontSize',12,'FontWeight','normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR 
              legend([f03(01),f03(02),f03(03),f03(04),f03(05),f03(06),f03(07)], ...
                {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal',...
                'Location','Southwest');
              
              subplot(2,1,2);
              hold on;
              f03(08) = plot(ExcSet.Dl_PPS_wl,Raw.P_P1_Log(:,1),'-b','LineWidth',1.25);% P1
              f03(09) = plot(ExcSet.Dl_PPS_wl,Raw.P_P2_Log(:,1),'-g','LineWidth',1.25);% P2
              f03(10) = plot(ExcSet.Dl_PPS_wl,Raw.P_SI_Log(:,1),'-k','LineWidth',1.25);% SI
              f03(11) = plot(ExcSet.Dl_PPS_wl,Raw.P_P3_Log(:,1),'-y','LineWidth',1.25);% P3
              f03(12) = plot(ExcSet.Dl_PPS_wl,Raw.P_P4_Log(:,1),'-r','LineWidth',1.25);% P4
              f03(13) = plot(ExcSet.Dl_PPS_wl,Raw.P_S1_Log(:,1),'-m','LineWidth',1.25);% S1
              f03(14) = plot(ExcSet.Dl_PPS_wl,Raw.P_S2_Log(:,1),'-c','LineWidth',1.25);% S2
              
              set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
                      'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
                      'yLim', [- 80,   +25],...
                      'yTick',[- 80:10:+25],...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              grid on;
              xlabel('\Delta\lambda_{PP} (nm)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              ylabel('Signal gain (dB)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Power evolution vs. \Delta\lambda_{PP}'; ...
                  'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
                  'FontName','Arial','FontSize',12,'FontWeight','normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR 
              legend([f03(01),f03(02),f03(03),f03(04),f03(05),f03(06),f03(07)], ...
                {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal',...
                'Location','Southwest');
            else % pwr_evo == 0,
              %
            end; % end of if-else pwr_evo
            %-------------------------------------------------------------------
            %% Fig.04 Phase mismatch vs. PP_Separation 
            if del_kappa,
              %%
              figure(04);
              set(gcf,'Position',[100 300 1000 750]);
              hold on;
              
            else % del_kappa == 0,
              
            end; % end of if-else del_kappa
            %-------------------------------------------------------------------
          % end of case 'Normal' in switch SimMod.Scan_cond
          %---------------------------------------------------------------------
          case 'Max_Min_Gain',
            
          % end of case 'Max_Min_Gain' in switch SimMod.Scan_cond
          %----------------------------------------------------------------
        end; % end of switch SimMod.Scan_cond
      % end of case 'PP_Separation' in switch SimMod.Scan_mode
      %--------------------------------------------------------------------
      case 'Pump_Power',     
        switch SimMod.Scan_cond,
          case 'Normal',      
            %% Fig.01 Gmax/Gmin/PSER/PSGA vs. NPS(rPL) @different offset and Separation 
            if sig_g_NPS,
              %%
              figure('Name','GainProfile','Position',[100 100 600 450]); 
              hold on;
            
            % PCS.rPL(:,1)= NLM.Gamma*2*Exc.Pwr(:,1)*ExcSet.PropZ_Len/pi; % NPS, rPL 
              PCS.rPL(:,1)= NLM.Gamma*2*Exc.Pwr(:,1)*ExcSet.PropZ_Len   ; % NPS, rPL 
              
              f01     = zeros(10,1);
              f01(01) = plot(PCS.rPL(:,1),Max.G_SI_max_m (:,1),...
                'Color',    [0.95 0.00 0.00],...
                'LineStyle',' -',...
                'LineWidth',1.25);
              f01(02) = plot(PCS.rPL(:,1),Max.G_SI_min_m (:,1),...
                'Color',    [0.00 0.00 0.95],...
                'LineStyle',' -',...
                'LineWidth',1.25);
              f01(03) = plot(PCS.rPL(:,1),Max.G_SI_PSER_m(:,1),...
                'Color',    [0.00 0.50 0.00],...
                'LineStyle',' -',...
                'LineWidth',1.25);
              f01(04) = plot(PCS.rPL(:,1),Max.G_SI_PSGA_m(:,1),...
                'Color',    [0.90 0.50 0.00],...
                'LineStyle',' -',...
                'LineWidth',1.25);
              set(gca,'xLim', [  0, 5.0],... % ceil(rPL(end,1))
                      'xTick',(  0.0: 0.5 : ceil(PCS.rPL(end,1))),...
                      'yLim', [- 60,    + 70],...
                      'yTick',(-100: 10:+100),...
                      'FontName','Arial',...
                      'FontSize',12,...
                      'FontWeight','Normal');
              grid on;
              xlabel('Nonlinear phase shift (\gammaPL) (rad)', ...
                'FontName',  'Arial',...
                'FontSize',  12,...
                'FontWeight','Normal');
              ylabel('Signal gain (dB)', ...
                'FontName',  'Arial',...
                'FontSize',  12,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Signal gain vs. Nonlinear phase shift (\gammaPL)'; ...
                 ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                              ', \Delta\lambda_{PPS}=',num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
                  'FontName','Arial',...
                  'FontSize',09,...
                  'FontWeight','Normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  %
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  %
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR 
              legend([f01(01),f01(02),f01(03),f01(04)], ...
               {'G_{max}';...
                'G_{min}';...
                'PSER';...
                'ASER'},...
                'FontName','Arial',...
                'FontSize',10.5,...
                'FontWeight','Normal',...
                'Location','best'); % Northeast
            else % sig_g == 0,
              %
            end; % end of if-else sig_g
            %-------------------------------------------------------------------
            %% Fig.02 signal gain profile vs. PP_Separation              
            if sig_g_NPS && 0,
              %%
              figure(02);
              set(gcf,'Position',[100 100 800 600]);
              hold on;
              
            % rPL(:,1)= NLM.Gamma*(Exc.Pwr(:,1)+Exc.Pwr(:,2))*NLM.Len/pi; % rPL = NPS
              rPL(:,1)= NLM.Gamma*(Exc.Pwr(:,1)+Exc.Pwr(:,2))*NLM.Len   ; % rPL = NPS

              f02     = zeros(10,1); 
            % f02(01) = plot(rPL(:,1),Max.G_SI_zro_m (:,1),' :k','LineWidth',1.25);
              f02(02) = plot(rPL(:,1),Max.G_SI_max_m (:,1),' -r','LineWidth',1.25); 
              f02(03) = plot(rPL(:,1),Max.G_SI_min_m (:,1),' -b','LineWidth',1.25); 
              f02(04) = plot(rPL(:,1),Max.G_SI_PSER_m(:,1),' -g','LineWidth',1.25); 
              f02(05) = plot(rPL(:,1),Max.G_SI_PSGA_m(:,1),' -y','LineWidth',1.25); 
              
            % f02(06) = plot(rPL(:,1),Max.G_SI_zro_m (:,2),' -r','LineWidth',1.25);
            % f02(07) = plot(rPL(:,1),Max.G_SI_max_m (:,2),'--r','LineWidth',1.25);
            % f02(08) = plot(rPL(:,1),Max.G_SI_min_m (:,2),'-.r','LineWidth',1.25);
            % f02(09) = plot(rPL(:,1),Max.G_SI_PSER_m(:,2),' :r','LineWidth',1.25);
            % f02(10) = plot(rPL(:,1),Max.G_SI_PSGA_m(:,2),' :r','LineWidth',1.25); 
            
            % f01(11) = plot(rPL(:,1),Max.G_SI_zro_m (:,3),' -g','LineWidth',1.25);
            % f01(12) = plot(rPL(:,1),Max.G_SI_max_m (:,3),'--g','LineWidth',1.25);
            % f01(13) = plot(rPL(:,1),Max.G_SI_min_m (:,3),'-.g','LineWidth',1.25);
            % f01(14) = plot(rPL(:,1),Max.G_SI_PSER_m(:,3),' :g','LineWidth',1.25);
            % f02(15) = plot(rPL(:,1),Max.G_SI_PSGA_m(:,3),' :r','LineWidth',1.25);  
            
%             set(gca,'xLim', [  0,                        ceil(rPL(end,1))],...
%                     'xTick',(  0.0: ceil(rPL(end,1))/5 : ceil(rPL(end,1))),...
              set(gca,'xLim', [  0,                        ceil(rPL(end,1))],...
                      'xTick',(  0.0: 0.5 : 15.5),...
                      'yLim', [- 50,    + 60],...
                      'yTick',[-100: 10:+100],...
                      'FontName','Arial',...
                      'FontSize',12,...
                      'FontWeight','Normal');
              grid on;
%               set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
%                       'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
%                       'yLim', [floor(min(Max.G_SI_max_m(:,1))), ceil(max(Max.G_SI_max_m(:,1)))],...
%                       'yTick',[floor(min(Max.G_SI_max_m(:,1))):...
%                                (ceil(max(Max.G_SI_max_m(:,1)))-floor(min(Max.G_SI_max_m(:,1))))/10:...
%                                 ceil(max(Max.G_SI_max_m(:,1)))],...
%                       'Color',     'k',...
%                       'FontName',  'Arial',...
%                       'FontSize',  12,...
%                       'FontWeight','Normal');
%               xlabel('\Delta\lambda_{PP} (nm)', ...
%                 'FontName','Arial',...
%                 'FontSize',12,...
%                 'FontWeight','Normal');
%               ylabel('Signal gain (dB)', ...
%                 'FontName','Arial',...
%                 'FontSize',12,...
%                 'FontWeight','Normal');
%               if SimMod.FLD_nPWR, % simulation with field
%                 title({'Signal gain vs. \Delta\lambda_{PP}'; ...
%                   'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
%                   'FontName','Arial',...
%                   'FontSize',12,...
%                   'FontWeight','Normal');
%               else % SimMod.FLD_nPWR == 0, simulation with power and phase
%                 if SimMod.PSA_nPIA, % simulation in PSA
%                   
%                 else % SimMod.PSA_nPIA == 0, simulation in PIA
%                   
%                 end; % SimMod.PSA_nPIA
%               end; % if-else SimMod.FLD_nPWR
%               %
%               legend([f01(01),f01(02)], ...
%                 {'Signal gain \theta_{rel,Max}',...
%                  'Signal gain \theta_{rel,0}'}, ...
%                 'FontName','Arial',...
%                 'FontSize',12,...
%                 'FontWeight','Normal',...
%                 'Location','Northeast'); 
              % 
              xlabel('Nonlinear phase shift (\gammaPL) (rad)', ...
                'FontName',  'Arial',...
                'FontSize',  11.0,...
                'FontWeight','Normal');
              ylabel('Signal gain (dB)', ...
                'FontName',  'Arial',...
                'FontSize',  11.0,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Signal gain vs. Nonlinear phase shift (\gammaPL)'; ...
                 ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                              ', \Delta\lambda_{PPS}=',num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
                  'FontName','Arial',...
                  'FontSize',09.0,...
                  'FontWeight','Normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  %
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  %
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR
              %
            % f02(01),f02(02),f02(03),f02(04),f02(05),...
            % f02(06),f02(07),f02(08),f02(09),f02(10),...
            % f02(11),f02(12),f02(13),f02(14),f02(15),...   
              legend([f02(02),f02(03),f02(04),f02(05)], ...
               {... % '\theta_{rel,zero}';...
                '\theta_{rel,max}';...
                '\theta_{rel,min}';...
                'PSER';...
                'ASER'},...
                'FontName','Arial',...
                'FontSize',10.0,...
                'FontWeight','Normal',...
                'Location','best'); % Northeast
            % 'Gmax \delta\lambda_{OFS}=-0.6nm';'Gmax \delta\lambda_{OFS}=0.15nm';'Gmax \delta\lambda_{OFS}=1.0nm';...
            % 'Gmin \delta\lambda_{OFS}=-0.6nm';'Gmin \delta\lambda_{OFS}=0.15nm';'Gmin \delta\lambda_{OFS}=1.0nm';...
            % 'GER  \delta\lambda_{OFS}=-0.6nm';'GER  \delta\lambda_{OFS}=0.15nm';'GER  \delta\lambda_{OFS}=1.0nm'  
              %%
              saveas(gcf,['NPS_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
                          '_PP=',       num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),...
                          '.fig']);
              print(gcf,'-dtiff','-r300',...
                         ['NPS_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
                          '_PP=',       num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),...
                          '.tif']);
            else % sig_g_NPS == 0,
              % 
            end; % end of if-else sig_g_NPS
            %-------------------------------------------------------------------
            %% Fig.03 signal gain profile vs. PP_Separation              
            if sig_g && 0,   
              %%
              figure(03);
              set(gcf,'Position',[100 300 600 450]);
              hold on;
              
            % rPL(:,1)= NLM.Gamma*2*Exc.Pwr(:,1)*NLM.Len/pi; % rPL = NPS
              rPL(:,1)= NLM.Gamma*2*Exc.Pwr(:,1)*NLM.Len   ; % rPL = NPS

              f03     = zeros(10,1);
              f03(01) = plot(rPL(:,1), Raw.G_SI_Log(1,:), ' :k','LineWidth',2);
              f03(02) = plot(rPL(:,1), Raw.G_SI_Log(2,:), '--b','LineWidth',2);
              f03(03) = plot(rPL(:,1), Raw.G_SI_Log(3,:), ' -r','LineWidth',2);
              f03(04) = plot(rPL(:,1), Raw.G_SI_Log(4,:), '-.c','LineWidth',2);
              f03(05) = plot(rPL(:,1), Raw.G_SI_Log(5,:), ' :m','LineWidth',2);
              f03(06) = plot(rPL(:,1), Raw.G_SI_Log(6,:), ' :y','LineWidth',2);

              set(gca,'xLim', [  0,         3],...
                      'xTick',(  0.0: 0.5 : 3),...
                      'yLim', [- 50,    + 50],...
                      'yTick',[-100: 10:+100],...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal');
              grid on;
              % 
              xlabel('Nonlinear phase shift (\gammaPL) (rad)', ...
                'FontName',  'Arial',...
                'FontSize',  12,...
                'FontWeight','Normal');
              ylabel('Signal gain (dB)', ...
                'FontName',  'Arial',...
                'FontSize',  12,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Signal gain vs. Nonlinear phase shift (\gammaPL)'; ...
                 ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                              ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
                  'FontName','Arial',...
                  'FontSize',12,...
                  'FontWeight','Normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  %
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  %
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR

              legend([f01(01),f01(02),f01(03),f01(04),f01(05),f01(06)], ...
               {['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
                ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
                ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
                ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
                ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
                ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal',...
                'Location','best'); 
            else % sig_g_NPS == 0,
              %
            end; % end of if-else sig_g_NPS
            %-------------------------------------------------------------------ExcSet.PP_Sp_Wvl
            %% Fig.04 Power curve vs. PP_Separation                      
            if pwr_evo,
              %%
              figure(04);
              set(gcf,'Position',[700 100 600 800]);
              
              subplot(2,1,1);
              hold on;
              
              f04(01) = plot(ExcSet.Dl_PPS_wl,Max.P_P1_max(:,1),'-b','LineWidth',1.25);% P1
              f04(02) = plot(ExcSet.Dl_PPS_wl,Max.P_P2_max(:,1),'-g','LineWidth',1.25);% P2
              f04(03) = plot(ExcSet.Dl_PPS_wl,Max.P_SI_max(:,1),'-k','LineWidth',1.25);% SI 
              f04(04) = plot(ExcSet.Dl_PPS_wl,Max.P_P3_max(:,1),'-y','LineWidth',1.25);% P3 
              f04(05) = plot(ExcSet.Dl_PPS_wl,Max.P_P4_max(:,1),'-r','LineWidth',1.25);% P4
              f04(06) = plot(ExcSet.Dl_PPS_wl,Max.P_S1_max(:,1),'-m','LineWidth',1.25);% S1
              f04(07) = plot(ExcSet.Dl_PPS_wl,Max.P_S2_max(:,1),'-c','LineWidth',1.25);% S2
              
              set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
                      'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
                      'yLim', [- 80,   +25],...
                      'yTick',[- 80:10:+25],...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              grid on;
              xlabel('\Delta\lambda_{PP} (nm)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              ylabel('Signal gain (dB)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Power evolution vs. \Delta\lambda_{PP}'; ...
                  'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
                  'FontName','Arial','FontSize',12,'FontWeight','normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR 
              legend([f04(01),f04(02),f04(03),f04(04),f04(05),f04(06),f04(07)], ...
                {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal',...
                'Location','Southwest');
              
              subplot(2,1,2);
              hold on;
              f04(08) = plot(ExcSet.Dl_PPS_wl,Raw.P_P1_Log(:,1),'-b','LineWidth',1.25);% P1
              f04(09) = plot(ExcSet.Dl_PPS_wl,Raw.P_P2_Log(:,1),'-g','LineWidth',1.25);% P2
              f04(10) = plot(ExcSet.Dl_PPS_wl,Raw.P_SI_Log(:,1),'-k','LineWidth',1.25);% SI
              f04(11) = plot(ExcSet.Dl_PPS_wl,Raw.P_P3_Log(:,1),'-y','LineWidth',1.25);% P3
              f04(12) = plot(ExcSet.Dl_PPS_wl,Raw.P_P4_Log(:,1),'-r','LineWidth',1.25);% P4
              f04(13) = plot(ExcSet.Dl_PPS_wl,Raw.P_S1_Log(:,1),'-m','LineWidth',1.25);% S1
              f04(14) = plot(ExcSet.Dl_PPS_wl,Raw.P_S2_Log(:,1),'-c','LineWidth',1.25);% S2
              
              set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
                      'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
                      'yLim', [- 80,   +25],...
                      'yTick',[- 80:10:+25],...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              grid on;
              xlabel('\Delta\lambda_{PP} (nm)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              ylabel('Signal gain (dB)', ...
                'FontName','Arial',...
                'FontSize',14,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Power evolution vs. \Delta\lambda_{PP}'; ...
                  'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
                  'FontName','Arial','FontSize',12,'FontWeight','normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR 
              legend([f04(01),f04(02),f04(03),f04(04),f04(05),f04(06),f04(07)], ...
                {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal',...
                'Location','Southwest');
            else % pwr_evo == 0,
              %
            end; % end of if-else pwr_evo
            %-------------------------------------------------------------------
          % end of case 'Normal' in switch SimMod.Scan_cond
          %---------------------------------------------------------------------
          case 'Propagate',   
            %% Fig.01 Power evolution vs. Propagated length 
            if pwr_evo, % 
              %%
              figure('Name','01','Position',[100 400 600 450]);
              hold on;
              
            % PCS.rPL(:,1)= NLM.Gamma*2*Exc.Pwr(:,1)*ExcSet.PropZ_Len/pi; % NPS, rPL 
              PCS.rPL(:,1)= NLM.Gamma*2*Exc.Pwr(:,1)*ExcSet.PropZ_Len   ; % NPS, rPL 
              
              f02(01) = plot(ExcSet.PropZ_Len./ExcSet.PropZ_Len(end),Max.P_P1_Log_max_evo(:,1),'-b','LineWidth',1.25);% P1
              f02(02) = plot(ExcSet.PropZ_Len./ExcSet.PropZ_Len(end),Max.P_P2_Log_max_evo(:,1),'-g','LineWidth',1.25);% P2
              f02(03) = plot(ExcSet.PropZ_Len./ExcSet.PropZ_Len(end),Max.P_SI_Log_max_evo(:,1),'-k','LineWidth',1.25);% SI
              f02(04) = plot(ExcSet.PropZ_Len./ExcSet.PropZ_Len(end),Max.P_P3_Log_max_evo(:,1),'-r','LineWidth',1.25);% P3
              f02(05) = plot(ExcSet.PropZ_Len./ExcSet.PropZ_Len(end),Max.P_P4_Log_max_evo(:,1),'-y','LineWidth',1.25);% P4
              f02(06) = plot(ExcSet.PropZ_Len./ExcSet.PropZ_Len(end),Max.P_S1_Log_max_evo(:,1),'-m','LineWidth',1.25);% S1
              f02(07) = plot(ExcSet.PropZ_Len./ExcSet.PropZ_Len(end),Max.P_S2_Log_max_evo(:,1),'-c','LineWidth',1.25);% S2

              set(gca,'xLim', [  0,  1],...
                      'xTick',(  0.0 : 0.1 : 1.1),...
                      'yLim', [- 80,       +30],...
                      'yTick',(- 90 : 10 : +30),...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal');
              grid on;
              xlabel(['Normalized propagation Z',' '],...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal');
              ylabel(['Power ','(dBm)'],...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal');
              % 
              if SimMod.FLD_nPWR, % simulation with field
                title({'Power evolution vs. Propagated length'; ...
                 ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                              ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
                  'FontName','Arial',...
                  'FontSize',09,...
                  'FontWeight','Normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  %
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  %
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR
              % 
              legend([f02(01),f02(02),f02(03),f02(04),f02(05),f02(06),f02(07)], ...
                {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal',...
                'Location','Best');

%               saveas(gcf,['PropZ_Pevo_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                           '_PP=',              num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),...
%                           '.fig']);
%               print(gcf,'-dtiff','-r300',...
%                          ['PropZ_Pevo_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                           '_PP=',              num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),...
%                           '.tif']);

    %           subplot(2,1,2);
    %           hold on;
    %           f03(08) = plot(ExcSet.Dl_PPS_wl,Raw.P_P1_Log(:,1),'-b','LineWidth',1.25);% P1
    %           f03(09) = plot(ExcSet.Dl_PPS_wl,Raw.P_P2_Log(:,1),'-g','LineWidth',1.25);% P2
    %           f03(10) = plot(ExcSet.Dl_PPS_wl,Raw.P_SI_Log(:,1),'-k','LineWidth',1.25);% SI
    %           f03(11) = plot(ExcSet.Dl_PPS_wl,Raw.P_P3_Log(:,1),'-y','LineWidth',1.25);% P3
    %           f03(12) = plot(ExcSet.Dl_PPS_wl,Raw.P_P4_Log(:,1),'-r','LineWidth',1.25);% P4
    %           f03(13) = plot(ExcSet.Dl_PPS_wl,Raw.P_S1_Log(:,1),'-m','LineWidth',1.25);% S1
    %           f03(14) = plot(ExcSet.Dl_PPS_wl,Raw.P_S2_Log(:,1),'-c','LineWidth',1.25);% S2
    %           
    %           set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
    %             'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
    %             'yLim', [- 80,   +25],...
    %             'yTick',[- 80:10:+25],...
    %             'FontName','Arial',...
    %             'FontSize',14,...
    %             'FontWeight','normal');
    %           grid on;
    %           xlabel('\Delta\lambda_{PP} (nm)', ...
    %             'FontName','Arial',...
    %             'FontSize',14,...
    %             'FontWeight','normal');
    %           ylabel('Signal gain (dB)', ...
    %             'FontName','Arial',...
    %             'FontSize',14,...
    %             'FontWeight','normal');
    %           if SimMod.FLD_nPWR, % simulation with field
    %             title({'Power evolution vs. \Delta\lambda_{PP}'; ...
    %               'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
    %               'FontName','Arial','FontSize',12,'FontWeight','normal');
    %           else % SimMod.FLD_nPWR == 0, simulation with power and phase
    %             if SimMod.PSA_nPIA, % simulation in PSA
    %               
    %             else % SimMod.PSA_nPIA == 0, simulation in PIA
    %               
    %             end; % SimMod.PSA_nPIA
    %           end; % if-else SimMod.FLD_nPWR
    %           legend([f02(01),f02(02),f02(03),f02(04),f02(05),f02(06),f02(07)], ...
    %             {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
    %             'FontName','Arial',...
    %             'FontSize',12,...
    %             'FontWeight','normal',...
    %             'Location','Southwest');
            else % pwr_evo == 0,
              %
            end; % end of if-else pwr_evo
            %-------------------------------------------------------------------
            %% Fig.02 Power evolution vs. Propagated length 
            if pwr_evo,
              %%
              figure('Name','02','Position',[700 100 800 600]);
              hold on;

              f02(01) = plot(ExcSet.PropZ_Len./ExcSet.PropZ_Len(end),Max.P_P1_Log_max_evo(:,1),'-b','LineWidth',1.25);% P1
              f02(02) = plot(ExcSet.PropZ_Len./ExcSet.PropZ_Len(end),Max.P_P2_Log_max_evo(:,1),'-g','LineWidth',1.25);% P2
              f02(03) = plot(ExcSet.PropZ_Len./ExcSet.PropZ_Len(end),Max.P_SI_Log_max_evo(:,1),'-k','LineWidth',1.25);% SI
              f02(04) = plot(ExcSet.PropZ_Len./ExcSet.PropZ_Len(end),Max.P_P3_Log_max_evo(:,1),'-r','LineWidth',1.25);% P3
              f02(05) = plot(ExcSet.PropZ_Len./ExcSet.PropZ_Len(end),Max.P_P4_Log_max_evo(:,1),'-y','LineWidth',1.25);% P4
              f02(06) = plot(ExcSet.PropZ_Len./ExcSet.PropZ_Len(end),Max.P_S1_Log_max_evo(:,1),'-m','LineWidth',1.25);% S1
              f02(07) = plot(ExcSet.PropZ_Len./ExcSet.PropZ_Len(end),Max.P_S2_Log_max_evo(:,1),'-c','LineWidth',1.25);% S2

              set(gca,'xLim', [  0,  1],...
                      'xTick',(  0.0 : 0.1 : 1.1),...
                      'yLim', [- 80,       +30],...
                      'yTick',(- 90 : 10 : +30),...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal');
              grid on;
              xlabel(['Normalized propagation Z',' '],...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal');
              ylabel(['Power ','(dBm)'],...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal');
              % 
              if SimMod.FLD_nPWR, % simulation with field
                title({'Power evolution vs. Propagated length'; ...
                 ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                              ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
                  'FontName','Arial',...
                  'FontSize',09,...
                  'FontWeight','Normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  %
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  %
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR
              % 
              legend([f02(01),f02(02),f02(03),f02(04),f02(05),f02(06),f02(07)], ...
                {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','Normal',...
                'Location','Best');
            else % pwr_evo == 0,
              %
            end; % end of if-else pwr_evo
            %-------------------------------------------------------------------
          % end of case 'Propagate' in switch SimMod.Scan_cond
          %---------------------------------------------------------------------
          case 'GainProfile', 
            %% Fig.02 7-wave phase-sensitive signal gain vs. signal phase   
            if PSER_PSGA == 1,
              %%
              figure(02);
              set(gcf,'Position',[100 300 600 450]);
              hold on;
              
              p_PSG     = zeros(5,1);
              
              p_PSG( 2) = plot(Phi_SI/pi, G_SI_Log(:,1),' -k','LineWidth',1.25);
              
              % set(gca, 'xLim', [0  ,50]);
              % set(gca, 'yLim', [-90,30]);
              set(gca,'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal');
              grid on;
              xlabel('\Delta\lambda_{PP} (nm)', ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal');
              ylabel('Signal gain (dB)', ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal');
              if SimMod.FLD_nPWR, % simulation with field
                title({'Signal gain vs. \Delta\lambda_{PP}'; ...
                  'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
                  'FontName','Arial',...
                  'FontSize',12,...
                  'FontWeight','normal');
              else % SimMod.FLD_nPWR == 0, simulation with power and phase
                if SimMod.PSA_nPIA, % simulation in PSA
                  
                else % SimMod.PSA_nPIA == 0, simulation in PIA
                  
                end; % SimMod.PSA_nPIA
              end; % if-else SimMod.FLD_nPWR
              legend([f02(01)], ...
                {'Maximum signal gain'}, ...
                'FontName','Arial',...
                'FontSize',12,...
                'FontWeight','normal',...
                'Location','Northeast');
              
              xlabel('Signal phase (\pi)', ...
                'FontName','Arial','FontSize',12,'FontWeight','bold');
              ylabel('Phase-sensitive gian (dB)', ...
                'FontName','Arial','FontSize',12,'FontWeight','bold');
              
              if PWR_nFLD == 1,
                if PSA_nPIA == 1,
                  title({'Phase-matching evolution in 7-wave model (Numerical)'; ...
                    '(CM-ODE of field, Wave separated and \Delta\beta calculated in \omega )'}, ...
                    'FontName','Arial','FontSize',12,'FontWeight','bold');
                else % PSA_nPIA == 0
                  title({'Phase-matching evolution in 7-wave model (Numerical)'; ...
                    '(CM-ODE of field, Wave separated and \Delta\beta calculated in \omega )'}, ...
                    'FontName','Arial','FontSize',12,'FontWeight','bold');
                end; % PSA_nPIA
              else % PWR_nFLD == 0,
                title({'Phase-sensitive gain in 7-wave model (Numerical)'; ...
                  '(CM-ODE of field, Wave separated and \Delta\beta calculated in \omega )'}, ...
                  'FontName','Arial','FontSize',12,'FontWeight','bold');
              end; % end of PWR_nFLD
              
              legend([p_PSG( 1),p_PSG( 2),p_PSG( 3)], ...
                {'\Delta\beta_{02}';'\Delta\beta_{04}'}, ...
                'FontName','Arial','FontSize',14,'FontWeight','bold','Location','Southwest');
              
            else % psg_rPL == 0
              
            end; % end of if-else psg_rPL
            %-----------------------------------------------------------------------
            %% Fig.08 7-wave complex output signal vs. rPL
            if PtT_TC_c == 1,
              %%
              figure(01);
              set(gcf,'Position',[100 300 600 550]);
              hold on;
              
              % re_SI_var = sqrt(P_SI_Lin)*cos(Phase_SI(1,:));
              % im_SI_var = sqrt(P_SI_Lin)*sin(Phase_SI(1,:));
              
              f04    = zeros(10,1);
              
              % plot_f08( 1)= plot(real(A_Var(:,3))./abs(A_SI),imag(A_Var(:,3))./abs(A_SI),' -b','LineWidth',1.25);
              % plot_f08( 2)= plot(real(A_Var(:,2))/abs(A_SI(2)),imag(A_SI_Var(:,2))/abs(A_SI(2)),'*-r','LineWidth',1.25);
              
              f04( 1)=plot((sqrt(P_SI)          *cos(Phi_SI)       )./(abs(A_SI)), ...
                (sqrt(P_SI)          *sin(Phi_SI)       )./(abs(A_SI)),' :k','LineWidth',1.25);
              f04( 2)=plot((sqrt(P_SI_Lin(1,:)).*cos(Phase_SI(1,:)))./(abs(A_SI)), ...
                (sqrt(P_SI_Lin(1,:)).*sin(Phase_SI(1,:)))./(abs(A_SI)),' -k','LineWidth',1.25);
              f04( 3)=plot((sqrt(P_SI_Lin(2,:)).*cos(Phase_SI(2,:)))./(abs(A_SI)), ...
                (sqrt(P_SI_Lin(2,:)).*sin(Phase_SI(2,:)))./(abs(A_SI)),' -b','LineWidth',1.25);
              f04( 4)=plot((sqrt(P_SI_Lin(3,:)).*cos(Phase_SI(3,:)))./(abs(A_SI)), ...
                (sqrt(P_SI_Lin(3,:)).*sin(Phase_SI(3,:)))./(abs(A_SI)),' -r','LineWidth',1.25);
              f04( 5)=plot((sqrt(P_SI_Lin(4,:)).*cos(Phase_SI(4,:)))./(abs(A_SI)), ...
                (sqrt(P_SI_Lin(4,:)).*sin(Phase_SI(4,:)))./(abs(A_SI)),' -g','LineWidth',1.25);
              f04( 6)=plot((sqrt(P_SI_Lin(5,:)).*cos(Phase_SI(5,:)))./(abs(A_SI)), ...
                (sqrt(P_SI_Lin(5,:)).*sin(Phase_SI(5,:)))./(abs(A_SI)),' -m','LineWidth',1.25);
              f04( 7)=plot((sqrt(P_SI_Lin(6,:)).*cos(Phase_SI(6,:)))./(abs(A_SI)), ...
                (sqrt(P_SI_Lin(6,:)).*sin(Phase_SI(6,:)))./(abs(A_SI)),' -y','LineWidth',1.25);
              
              % set(gca, 'xLim', [-15.0e-3, 15.0e-3], 'xTick',(-5.0e-3:1.0e-3:5.0e-3));
              % set(gca, 'yLim', [-15.0e-3, 15.0e-3], 'yTick',(-5.0e-3:1.0e-3:5.0e-3));
              set(gca, 'xLim', [-5.0, 5.0], 'xTick',(-5.0:1.0:5.0));
              set(gca, 'yLim', [-5.0, 5.0], 'yTick',(-5.0:1.0:5.0));
              set(gca,'FontName','Arial','FontSize',12,'FontWeight','bold');
              grid on;
              
              xlabel('Re (Normalized)', ...
                'FontName','Arial','FontSize',14,'FontWeight','bold');
              ylabel('Im (Normalized)', ...
                'FontName','Arial','FontSize',14,'FontWeight','bold');
              
              if PWR_nFLD == 1,
                if PSA_nPIA == 1,
                  title({'Complex output signal'; ...
                    'CM-ODE of field, 7-wave model (Numerical)'}, ...
                    'FontName','Arial','FontSize',14,'FontWeight','bold');
                else % PSA_nPIA == 0
                  title({'Complex output signal in 7-wave model (Numerical)'; ...
                    'CM-ODE of field, 7-wave model (Numerical)'}, ...
                    'FontName','Arial','FontSize',14,'FontWeight','bold');
                end; % PSA_nPIA
              else % PWR_nFLD == 0,
                title({'Complex output signal space trajectory'; ...
                  '\lambda_{sig}=\lambda_{ZD}, 7-wave model (Numerical)'}, ...
                  'FontName','Arial','FontSize',14,'FontWeight','bold');
              end; % end of PWR_nFLD
              
              legend([f04( 1),f04( 2),f04( 3),f04( 4),f04( 5),f04( 6),f04( 7)], ...
                { 'Input signal'; ...
                ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(1)*1e9,'%2.2f'),'nm']; ...
                ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(2)*1e9,'%2.2f'),'nm']; ...
                ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(3)*1e9,'%2.2f'),'nm']; ...
                ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(4)*1e9,'%2.2f'),'nm']; ...
                ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(5)*1e9,'%2.2f'),'nm']; ...
                ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(6)*1e9,'%2.2f'),'nm']},...
                'FontName','Arial','FontSize',12,'FontWeight','bold','Location','Southeast');
              
            else % cps_p == 0
              
            end; % end of if-else cps_p
            %------------------------------------------------------------------
            % end of case 'PP_Separation' in switch SimMod.Scan_mode
            %--------------------------------------------------------------------
          % end of case 'Max_Min_Gain' in switch SimMod.Scan_cond
          %----------------------------------------------------------------
        end; % end of switch SimMod.Scan_mode
        %-----------------------------------------------------------------------
      case 'Signal_Power',   
        %% Fig.01 signal gain vs. ratio of signal power / pump power
        if sig_g,
          %% if plot signal_gain
          figure(01);
          set(gcf,'Position',[100 100 600 450]);
          hold on;
          
          f01     = zeros(10, 1);
          f01(01) = plot(10*log10(Exc.Pwr(:,3)./(Exc.Pwr(:,1)+Exc.Pwr(:,2))), Max.G_SI_max_m(:,1),...
            'Color',    [0.9 0.0 0.0],...
            'LineStyle',' -',...
            'LineWidth',1.25);
          f01(02) = plot(10*log10(Exc.Pwr(:,3)./(Exc.Pwr(:,1)+Exc.Pwr(:,2))), Max.G_SI_min_m(:,1),...
            'Color',    [0.0 0.0 0.9],...
            'LineStyle',' -',...
            'LineWidth',1.25);
          f01(03) = plot(10*log10(Exc.Pwr(:,3)./(Exc.Pwr(:,1)+Exc.Pwr(:,2))), Max.G_SI_PSER_m(:,1),...
            'Color',    [0.9 0.5 0.0],...
            'LineStyle',' -',...
            'LineWidth',1.25);
          f01(04) = plot(10*log10(Exc.Pwr(:,3)./(Exc.Pwr(:,1)+Exc.Pwr(:,2))), Max.G_SI_PSGA_m(:,1),...
            'Color',    [0.0 0.5 0.0],...
            'LineStyle',' -',...
            'LineWidth',1.25);

          set(gca,'xLim', [- 40.0,       + 10.0],...
                  'xTick',(- 60.0:  5.0 :+ 20.0),...
                  'yLim', [- 60.0,       + 60.0],...
                  'yTick',(-100.0: 10.0 :+100.0),...
            'FontName','Arial',...
            'FontSize',10.5,...
            'FontWeight','Normal');
        % set(gca,'xLim', [  0.0, 1.0],...
        %         'xTick',(- 1.0: 0.1 :+1.5),...
        %         'yLim', [floor(min(Max.G_SI_max_m(:,1)))-1, ceil(max(Max.G_SI_max_m(:,1)))+1],...
        %         'yTick',[floor(min(Max.G_SI_max_m(:,1)))-1:...
        %                  5.0:...
        %                   ceil(max(Max.G_SI_max_m(:,1)))+1],...
          grid on;
          xlabel('P_{Signal}/P_{Pump}', ...
            'FontName','Arial',...
            'FontSize',11.0,...
            'FontWeight','Normal');
          ylabel('Signal gain (dB)', ...
            'FontName','Arial',...
            'FontSize',11.0,...
            'FontWeight','Normal');
          %
          if SimMod.FLD_nPWR, % simulation with field
            title({'Signal gain vs. Signal power pump power ratio'; ...
             ['7-wave CWODE',' ',...
              '\delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm ',...
              '\Delta\lambda_{PPS}=',num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm ']},...
              'FontName','Arial',...
              'FontSize',09.0,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA

            else % SimMod.PSA_nPIA == 0, simulation in PIA

            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          %
          legend([f01(01),f01(02),f01(03),f01(04)], ...
            {'G_{Max}',...
             'G_{Min}',...
             'PSER',...
             'PSGA'}, ...
            'FontName','Arial',...
            'FontSize',09.5,...
            'FontWeight','Normal',...
            'Location','Northeast');  
        else % sig_g == 0,
          %
        end; % end of if-else sig_g
        %-----------------------------------------------------------------------
        %% Fig.02 signal power vs. ratio of signal power / pump power
        if sig_g,
          %% if plot signal_gain
          figure(02);
          set(gcf,'Position',[100 100 600 450]);
          hold on;
          
          f02     = zeros(10, 1);
          
          f02(01) = plot(10*log10(Exc.Pwr(:,3)./(Exc.Pwr(:,1)+Exc.Pwr(:,2))), Max.P_SI_max(:,1),...
            'Color',    [0.9 0.0 0.0],...
            'LineStyle',' -',...
            'LineWidth',1.25);
          f02(02) = plot(10*log10(Exc.Pwr(:,3)./(Exc.Pwr(:,1)+Exc.Pwr(:,2))), Max.P_SI_max(:,1),...
            'Color',    [0.9 0.0 0.0],...
            'LineStyle',' -',...
            'LineWidth',1.25);

          set(gca,'xLim', [- 30.0,       +  5.0],...
                  'xTick',(- 50.0:  5.0 :+ 10.0),...
                  'yLim', [- 50.0,       + 50.0],...
                  'yTick',(-100.0: 10.0 :+100.0),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          %
          xlabel('P_{Signal}/P_{Pump}', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          ylabel('Signal gain (dB)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          %
          if SimMod.FLD_nPWR, % simulation with field
            title({'Signal gain vs. Signal power pump power ratio'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA

            else % SimMod.PSA_nPIA == 0, simulation in PIA

            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          %
          legend([f02(01),f02(02)], ...
            {'\theta_{rel,Max}',...
             '\theta_{rel,Min}'}, ...
            'FontName','Arial',...
            'FontSize',10,...
            'FontWeight','Normal',...
            'Location','Northeast');  
        else % sig_g == 0,
          %
        end; % end of if-else sig_g
        %-----------------------------------------------------------------------
        %% Fig.02 Phase-to-Amplitude transfer characteristic  
        if PtA_TC,   
          %%
          figure(02);
          set(gcf,'Position',[100 300 600 450]);
          hold on;
          
          f02     = zeros(10,1);
          
          f02( 1) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(1,:),' -k','LineWidth',1.25);
        % f03( 2) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(2,:),' -b','LineWidth',1.25);
        % f03( 3) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(3,:),' -r','LineWidth',1.25);
        % f03( 4) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(4,:),' -g','LineWidth',1.25);
        % f03( 5) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(5,:),' -m','LineWidth',1.25);
        % f03( 6) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(6,:),' -y','LineWidth',1.25);
          
          set(gca,'xLim', [- 0.25,+ 2.25],...
                  'xTick',(- 0.5 : 0.25 :+ 2.5),...
                  'yLim', [floor(min(Raw.G_SI_Log(1,:)))-2, ceil(max(Raw.G_SI_Log(1,:)))+2],...
                  'yTick',(- 50.0 : 5.0 :+ 50.0),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          
          xlabel('Input signal phase (\pi)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          ylabel('Signal gain (dB)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Phase-to-Amplitude transfer characteristic'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA
              %
            else % SimMod.PSA_nPIA == 0, simulation in PIA
              %
            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          
%           legend([f03( 1),f03( 2),f03( 3),f03( 4),f03( 5),f03( 6)], ...
%            {['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
%             'FontName','Arial',...
%             'FontSize',12,...
%             'FontWeight','Normal',...
%             'Location','Best');

          legend([f02( 1)], ...
           {['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Best');
          
%           saveas(gcf,['PtA_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.fig']);
%           print(gcf,'-dtiff','-r300',...
%                      ['PtA_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.tif']);
        else % PtA_TC == 0
          % not defined
        end; % end of if-else PtA_TC
        %-----------------------------------------------------------------------
        %% Fig.03 Phase-to-Phase transfer characteristic      
        if PtP_TC, 
          %%
          figure(03);
          set(gcf,'Position',[100 300 600 450]);
          hold on;
          
          f03     = zeros(10,1);
          f03(01) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(1,:)/pi+1,' -k','LineWidth',1.25);
        % f03( 2) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(2,:)/pi+1,' -b','LineWidth',1.25);
        % f03( 3) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(3,:)/pi+1,' -r','LineWidth',1.25);
        % f03( 4) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(4,:)/pi+1,' -g','LineWidth',1.25);
        % f03( 5) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(5,:)/pi+1,' -m','LineWidth',1.25);
        % f03( 6) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(6,:)/pi+1,' -y','LineWidth',1.25);
          
          set(gca,'xLim', [- 0.25,+ 2.25],...
                  'xTick',(- 0.5 : 0.25 :+ 2.5),...
                  'yLim', [- 0.25,+ 2.25],...
                  'yTick',(- 0.5 : 0.25 :+ 2.5),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          
          xlabel('Input signal phase (\pi)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          ylabel('Output signal phase (\pi)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Phase-to-Phase transfer characteristic'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA
              %
            else % SimMod.PSA_nPIA == 0, simulation in PIA
              %
            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          
%           legend([f03( 1),f03( 2),f03( 3),f03( 4),f03( 5),f03( 6)], ...
%            {['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PPD}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
%             'FontName','Arial',...
%             'FontSize',12,...
%             'FontWeight','Normal',...
%             'Location','Best');

          legend([f03( 1)], ...
           {['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Best');
          %%
%           saveas(gcf,['PtP_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.fig']);
%           print(gcf,'-dtiff','-r300',...
%                      ['PtP_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.tif']);
        else % PtP_TC  == 0
          % not defined
        end; % end of if-else PtP_TC
        %-----------------------------------------------------------------------
        %% Fig.04 Phase-to-Trajectory transfer characteristic 
        if PtT_TC_c, 
          %%
          figure(04);
          set(gcf,'Position',[100 300 600 450]);
          hold on;
          
          f04      = zeros(10,1);
          
        % re_SI_var = sqrt(P_SI_Lin)*cos(Phase_SI(1,:));
        % im_SI_var = sqrt(P_SI_Lin)*sin(Phase_SI(1,:));

        % f04( 1)= plot(real(A_Var(:,3))./abs(A_SI),imag(A_Var(:,3))./abs(A_SI),' -b','LineWidth',1.25);
        % f04( 2)= plot(real(A_Var(:,2))/abs(A_SI(2)),imag(A_SI_Var(:,2))/abs(A_SI(2)),'*-r','LineWidth',1.25);
          
          f04(01)=plot((sqrt(Exc.Pwr(1,3))     .*cos(Exc.Phi(:,3))     )./(abs(Exc.Fld(1,3))), ...
                       (sqrt(Exc.Pwr(1,3))     .*sin(Exc.Phi(:,3))     )./(abs(Exc.Fld(1,3))),' :k','LineWidth',1.25);
          f04(02)=plot((sqrt(Raw.P_SI_Lin(1,:)).*cos(Raw.Phase_SI(1,:)))./(abs(Exc.Fld(1,3))), ...
                       (sqrt(Raw.P_SI_Lin(1,:)).*sin(Raw.Phase_SI(1,:)))./(abs(Exc.Fld(1,3))),' -k','LineWidth',1.25);
%         f04(03)=plot((sqrt(P_SI_Lin(2,:)).*cos(Phase_SI(2,:)))./(abs(A_SI)), ...
%                      (sqrt(P_SI_Lin(2,:)).*sin(Phase_SI(2,:)))./(abs(A_SI)),' -b','LineWidth',1.25);
%         f04(04)=plot((sqrt(P_SI_Lin(3,:)).*cos(Phase_SI(3,:)))./(abs(A_SI)), ...
%                      (sqrt(P_SI_Lin(3,:)).*sin(Phase_SI(3,:)))./(abs(A_SI)),' -r','LineWidth',1.25);
%         f04(05)=plot((sqrt(P_SI_Lin(4,:)).*cos(Phase_SI(4,:)))./(abs(A_SI)), ...
%                      (sqrt(P_SI_Lin(4,:)).*sin(Phase_SI(4,:)))./(abs(A_SI)),' -g','LineWidth',1.25);
%         f04(06)=plot((sqrt(P_SI_Lin(5,:)).*cos(Phase_SI(5,:)))./(abs(A_SI)), ...
%                      (sqrt(P_SI_Lin(5,:)).*sin(Phase_SI(5,:)))./(abs(A_SI)),' -m','LineWidth',1.25);
%         f04(07)=plot((sqrt(P_SI_Lin(6,:)).*cos(Phase_SI(6,:)))./(abs(A_SI)), ...
%                      (sqrt(P_SI_Lin(6,:)).*sin(Phase_SI(6,:)))./(abs(A_SI)),' -y','LineWidth',1.25);
          
        % set(gca,'xLim', [-15.0e-3, 15.0e-3], 'xTick',(-5.0e-3:1.0e-3:5.0e-3));
        % set(gca,'yLim', [-15.0e-3, 15.0e-3], 'yTick',(-5.0e-3:1.0e-3:5.0e-3));
        % set(gca,'xLim', [-5.0, 5.0], 'xTick',(-5.0:1.0:5.0));
        % set(gca,'yLim', [-5.0, 5.0], 'yTick',(-5.0:1.0:5.0));
          set(gca,'xLim', [-ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3))))),...
                           +ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3)))))],...
                  'xTick',(-50.0 : 1.0 :+ 50.0),...
                  'yLim', [-ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3))))),...
                           +ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3)))))],...
                  'yTick',(-50.0 : 1.0 :+ 50.0),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          
          xlabel('Re (Normalized)', ...
            'FontName','Arial','FontSize',12,'FontWeight','Normal');
          ylabel('Im (Normalized)', ...
            'FontName','Arial','FontSize',12,'FontWeight','Normal');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Phase-to-Trajectory transfer characteristic in complex space'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA
              %
            else % SimMod.PSA_nPIA == 0, simulation in PIA
              %
            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          
%           legend([f04( 1),f04( 2),f04( 3),f04( 4),f04( 5),f04( 6),f04( 7)], ...
%             { 'Input signal'; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(1)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(2)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(3)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(4)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(5)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(6)*1e9,'%2.2f'),'nm']},...
%             'FontName','Arial','FontSize',12,'FontWeight','bold','Location','Southeast');
          legend([f04(01),f04(02)], ...
           {['Input signal'];...
            ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Best');
        else % PtP_TC  == 0
          % not defined
        end; % end of if-else PtP_TC
        %-----------------------------------------------------------------------
      %-------------------------------------------------------------------------        
      case 'Relative_Phase', 
        %% Fig.01 Signal gain vs. Signal phase 
        if PSER_PSGA,
          %%
          figure(05);
          set(gcf,'Position',[100 300 600 450]);
          hold on;
          
          plot_f05     = zeros(5,1);
          
          %plot_f05( 1) = plot(Phi_SI/pi, G_SI_Log(1,:),' -k','LineWidth',1.25);
          %plot_f05( 2) = plot(Phi_SI/pi, G_SI_Log(2,:),' -b','LineWidth',1.25);
          %plot_f05( 3) = plot(Phi_SI/pi, G_SI_Log(3,:),' -r','LineWidth',1.25);
          %plot_f05( 4) = plot(Phi_SI/pi, G_SI_Log(4,:),' -g','LineWidth',1.25);
          %plot_f05( 5) = plot(Phi_SI/pi, G_SI_Log(5,:),' -m','LineWidth',1.25);
          %plot_f05( 6) = plot(Phi_SI/pi, G_SI_Log(6,:),' -y','LineWidth',1.25);
          
          set(gca, 'xLim', [-0.5, 2]);
          % set(gca, 'yLim', [-90,30]);
          set(gca,'FontName','Arial','FontSize',12,'FontWeight','bold');
          
          grid on;
          
          xlabel('Input signal phase (\pi)', ...
            'FontName','Arial','FontSize',12,'FontWeight','bold');
          ylabel('Phase-sensitive gian (dB)', ...
            'FontName','Arial','FontSize',12,'FontWeight','bold');
          
          if SimMod.FLD_nPWR == 1,
            if SimMod.PSA_nPIA == 1,
              title({'Phase-to-Amplitude transfer function '; ...
                'CM-ODE of power and phase, 7-wave model (Numerical)'}, ...
                'FontName','Arial','FontSize',14,'FontWeight','bold');
            else % PSA_nPIA == 0
              title({'Phase-to-Amplitude transfer function '; ...
                'CM-ODE of power and phase, 7-wave model (Numerical)'}, ...
                'FontName','Arial','FontSize',14,'FontWeight','bold');
            end; % PSA_nPIA
          else % PWR_nFLD == 0,
            title({'Phase-to-Amplitude transfer function'; ...
              '\lambda_{sig}=\lambda_{ZD}, 7-wave model (Numerical)'}, ...
              'FontName','Arial','FontSize',14,'FontWeight','bold');
          end; % end of PWR_nFLD
          
          %legend([plot_f05( 1),plot_f05( 2),plot_f05( 3),plot_f05( 4),plot_f05( 5),plot_f05( 6)], ...
          %  {['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(1)*1e9,'%2.2f'),'nm']; ...
          %  ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(2)*1e9,'%2.2f'),'nm']; ...
          %  ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(3)*1e9,'%2.2f'),'nm']; ...
          %  ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(4)*1e9,'%2.2f'),'nm']; ...
          %  ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(5)*1e9,'%2.2f'),'nm']; ...
          %  ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(6)*1e9,'%2.2f'),'nm']},...
          %  'FontName','Arial','FontSize',12,'FontWeight','bold','Location','Southeast');
          
        else % psg_sp == 0
          %
        end; % end of if-else pssg_sp
        %-----------------------------------------------------------------------
        %% Fig.02 Phase-to-Amplitude transfer characteristic  
        if PtA_TC,   
          %%
          figure(02);
          set(gcf,'Position',[100 300 600 450]);
          hold on;
          
          f02     = zeros(10,1);
          
          f02( 1) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(1,:),' -k','LineWidth',1.25);
        % f03( 2) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(2,:),' -b','LineWidth',1.25);
        % f03( 3) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(3,:),' -r','LineWidth',1.25);
        % f03( 4) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(4,:),' -g','LineWidth',1.25);
        % f03( 5) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(5,:),' -m','LineWidth',1.25);
        % f03( 6) = plot(Exc.Phi(:,3)/pi, Raw.G_SI_Log(6,:),' -y','LineWidth',1.25);
          
          set(gca,'xLim', [- 0.25,+ 2.25],...
                  'xTick',(- 0.5 : 0.25 :+ 2.5),...
                  'yLim', [floor(min(Raw.G_SI_Log(1,:)))-2, ceil(max(Raw.G_SI_Log(1,:)))+2],...
                  'yTick',(- 50.0 : 5.0 :+ 50.0),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          
          xlabel('Input signal phase (\pi)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          ylabel('Signal gain (dB)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Phase-to-Amplitude transfer characteristic'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA
              %
            else % SimMod.PSA_nPIA == 0, simulation in PIA
              %
            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          
%           legend([f03( 1),f03( 2),f03( 3),f03( 4),f03( 5),f03( 6)], ...
%            {['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
%             'FontName','Arial',...
%             'FontSize',12,...
%             'FontWeight','Normal',...
%             'Location','Best');

          legend([f02( 1)], ...
           {['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Best');
          
%           saveas(gcf,['PtA_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.fig']);
%           print(gcf,'-dtiff','-r300',...
%                      ['PtA_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.tif']);
        else % PtA_TC == 0
          % 
        end; % end of if-else PtA_TC
        %-----------------------------------------------------------------------
        %% Fig.03 Phase-to-Phase transfer characteristic      
        if PtP_TC, 
          %%
          figure(03);
          set(gcf,'Position',[100 300 600 450]);
          hold on;
          
          f03     = zeros(10,1);
          f03(01) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(1,:)/pi+1,' -k','LineWidth',1.25);
        % f03( 2) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(2,:)/pi+1,' -b','LineWidth',1.25);
        % f03( 3) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(3,:)/pi+1,' -r','LineWidth',1.25);
        % f03( 4) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(4,:)/pi+1,' -g','LineWidth',1.25);
        % f03( 5) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(5,:)/pi+1,' -m','LineWidth',1.25);
        % f03( 6) = plot(Exc.Phi(:,3)/pi, Raw.Phase_SI(6,:)/pi+1,' -y','LineWidth',1.25);
          
          set(gca,'xLim', [- 0.25,+ 2.25],...
                  'xTick',(- 0.5 : 0.25 :+ 2.5),...
                  'yLim', [- 0.25,+ 2.25],...
                  'yTick',(- 0.5 : 0.25 :+ 2.5),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          
          xlabel('Input signal phase (\pi)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          ylabel('Output signal phase (\pi)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Phase-to-Phase transfer characteristic'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA
              %
            else % SimMod.PSA_nPIA == 0, simulation in PIA
              %
            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          
%           legend([f03( 1),f03( 2),f03( 3),f03( 4),f03( 5),f03( 6)], ...
%            {['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']; ...
%             ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
%             'FontName','Arial',...
%             'FontSize',12,...
%             'FontWeight','Normal',...
%             'Location','Best');

          legend([f03( 1)], ...
           {['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Best');
          
%           saveas(gcf,['PtP_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.fig']);
%           print(gcf,'-dtiff','-r300',...
%                      ['PtP_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
%                       '_PP=',       num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),...
%                       '.tif']);
        else % PtP_TC  == 0
          % 
        end; % end of if-else PtP_TC
        %-----------------------------------------------------------------------
        %% Fig.04 Phase-to-Trajectory transfer characteristic 
        if PtT_TC_c, 
          %%
          figure(04);
          set(gcf,'Position',[100 300 600 450]);
          hold on;
          
          f04      = zeros(10,1);
          
          % re_SI_var = sqrt(P_SI_Lin)*cos(Phase_SI(1,:));
          % im_SI_var = sqrt(P_SI_Lin)*sin(Phase_SI(1,:));
          
          % f04( 1)= plot(real(A_Var(:,3))./abs(A_SI),imag(A_Var(:,3))./abs(A_SI),' -b','LineWidth',1.25);
          % f04( 2)= plot(real(A_Var(:,2))/abs(A_SI(2)),imag(A_SI_Var(:,2))/abs(A_SI(2)),'*-r','LineWidth',1.25);
          
          f04(01)=plot((sqrt(Exc.Pwr(1,3))     .*cos(Exc.Phi(:,3))     )./(abs(Exc.Fld(1,3))), ...
                       (sqrt(Exc.Pwr(1,3))     .*sin(Exc.Phi(:,3))     )./(abs(Exc.Fld(1,3))),' :k','LineWidth',1.25);
          f04(02)=plot((sqrt(Raw.P_SI_Lin(1,:)).*cos(Raw.Phase_SI(1,:)))./(abs(Exc.Fld(1,3))), ...
                       (sqrt(Raw.P_SI_Lin(1,:)).*sin(Raw.Phase_SI(1,:)))./(abs(Exc.Fld(1,3))),' -k','LineWidth',1.25);
%           f04(03)=plot((sqrt(P_SI_Lin(2,:)).*cos(Phase_SI(2,:)))./(abs(A_SI)), ...
%                        (sqrt(P_SI_Lin(2,:)).*sin(Phase_SI(2,:)))./(abs(A_SI)),' -b','LineWidth',1.25);
%           f04(04)=plot((sqrt(P_SI_Lin(3,:)).*cos(Phase_SI(3,:)))./(abs(A_SI)), ...
%                        (sqrt(P_SI_Lin(3,:)).*sin(Phase_SI(3,:)))./(abs(A_SI)),' -r','LineWidth',1.25);
%           f04(05)=plot((sqrt(P_SI_Lin(4,:)).*cos(Phase_SI(4,:)))./(abs(A_SI)), ...
%                        (sqrt(P_SI_Lin(4,:)).*sin(Phase_SI(4,:)))./(abs(A_SI)),' -g','LineWidth',1.25);
%           f04(06)=plot((sqrt(P_SI_Lin(5,:)).*cos(Phase_SI(5,:)))./(abs(A_SI)), ...
%                        (sqrt(P_SI_Lin(5,:)).*sin(Phase_SI(5,:)))./(abs(A_SI)),' -m','LineWidth',1.25);
%           f04(07)=plot((sqrt(P_SI_Lin(6,:)).*cos(Phase_SI(6,:)))./(abs(A_SI)), ...
%                        (sqrt(P_SI_Lin(6,:)).*sin(Phase_SI(6,:)))./(abs(A_SI)),' -y','LineWidth',1.25);
          
        % set(gca, 'xLim', [-15.0e-3, 15.0e-3], 'xTick',(-5.0e-3:1.0e-3:5.0e-3));
        % set(gca, 'yLim', [-15.0e-3, 15.0e-3], 'yTick',(-5.0e-3:1.0e-3:5.0e-3));
        % set(gca, 'xLim', [-5.0, 5.0], 'xTick',(-5.0:1.0:5.0));
        % set(gca, 'yLim', [-5.0, 5.0], 'yTick',(-5.0:1.0:5.0));
          
          set(gca,'xLim', [-ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3))))),...
                           +ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3)))))],...
                  'xTick',(-50.0 : 1.0 :+ 50.0),...
                  'yLim', [-ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3))))),...
                           +ceil(max((sqrt(Raw.P_SI_Lin(1,:)))./(abs(Exc.Fld(1,3)))))],...
                  'yTick',(-50.0 : 1.0 :+ 50.0),...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal');
          grid on;
          
          xlabel('Re (Normalized)', ...
            'FontName','Arial','FontSize',12,'FontWeight','bold');
          ylabel('Im (Normalized)', ...
            'FontName','Arial','FontSize',12,'FontWeight','bold');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Phase-to-Trajectory transfer characteristic in complex space'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',10,...
              'FontWeight','Normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA
              %
            else % SimMod.PSA_nPIA == 0, simulation in PIA
              %
            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          
%           legend([f04( 1),f04( 2),f04( 3),f04( 4),f04( 5),f04( 6),f04( 7)], ...
%             { 'Input signal'; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(1)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(2)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(3)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(4)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(5)*1e9,'%2.2f'),'nm']; ...
%             ['\lambda_{P}- \lambda_{S}=',num2str(L_Detuning(6)*1e9,'%2.2f'),'nm']},...
%             'FontName','Arial','FontSize',12,'FontWeight','bold','Location','Southeast');
          legend([f04(01),f04(02)], ...
           {['Input signal'];...
            ['\Delta\lambda_{PP}=',num2str(ExcSet.Dl_PPS_wl(01),'%3.1f'),'nm']},...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Best');
        else % PtP_TC  == 0
          % 
        end; % end of if-else PtP_TC
        %-----------------------------------------------------------------------
      %-------------------------------------------------------------------------
      case 'Propagation_Z',  
        %% Fig.01 Signal gain vs. Propagated length     
        if sig_g,
          %%
          figure(01);
          set(gcf,'Position',[100 300 600 450]);
          hold on;

          f01(01) = plot(ExcSet.PropZ_Len, Raw.P_P1_Log(4,:),'-b','LineWidth',1.2);
          f01(02) = plot(ExcSet.PropZ_Len, Raw.P_P2_Log(4,:),':g','LineWidth',1.2);
          f01(03) = plot(ExcSet.PropZ_Len, Raw.P_SI_Log(4,:),'-k','LineWidth',1.2);
          f01(04) = plot(ExcSet.PropZ_Len, Raw.P_P3_Log(4,:),'-y','LineWidth',1.2);
          f01(05) = plot(ExcSet.PropZ_Len, Raw.P_P4_Log(4,:),':r','LineWidth',1.2);
          f01(06) = plot(ExcSet.PropZ_Len, Raw.P_S1_Log(4,:),'-m','LineWidth',1.2);
          f01(07) = plot(ExcSet.PropZ_Len, Raw.P_S2_Log(4,:),':c','LineWidth',1.2);

          set(gca, 'xLim', [   0, NLM.Len]);
          set(gca, 'yLim', [-120, 30]);
          set(gca,'FontName','Arial','FontSize',12,'FontWeight','bold');
          grid on;

          xlabel('Propagated length (m)', ...
            'FontName','Arial','FontSize',12,'FontWeight','Normal');
          ylabel('Power (dBm)', ...
            'FontName','Arial','FontSize',12,'FontWeight','Normal');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Power evolution along fiber'; ...
              'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
              'FontName','Arial',...
              'FontSize',12,...
              'FontWeight','normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA

            else % SimMod.PSA_nPIA == 0, simulation in PIA

            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          % 
          legend([f01(01),f01(02),f01(03),f01(04),f01(05),f01(06),f01(07)], ...
            {'P1';'P2';'S0';'P3';'P4';'S1';'S2'}, ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Southeast');
        else
          %
        end; % end of if-else signal gain
        %-----------------------------------------------------------------------
        %% Fig.02 Power evolution vs. Propagated length 
        if pwr_evo,
          %%
          figure(02);
          set(gcf,'Position',[700 100 800 600]);
          hold on;
          
          f02(01) = plot(ExcSet.PropZ_Len./NLM.Len,Max.P_P1_max_z(1,:),'-b','LineWidth',1.25);% P1
          f02(02) = plot(ExcSet.PropZ_Len./NLM.Len,Max.P_P2_max_z(1,:),'-g','LineWidth',1.25);% P2
          f02(03) = plot(ExcSet.PropZ_Len./NLM.Len,Max.P_SI_max_z(1,:),'-k','LineWidth',1.25);% SI
          f02(04) = plot(ExcSet.PropZ_Len./NLM.Len,Max.P_P3_max_z(1,:),'-r','LineWidth',1.25);% P3
          f02(05) = plot(ExcSet.PropZ_Len./NLM.Len,Max.P_P4_max_z(1,:),'-y','LineWidth',1.25);% P4
          f02(06) = plot(ExcSet.PropZ_Len./NLM.Len,Max.P_S1_max_z(1,:),'-m','LineWidth',1.25);% S1
          f02(07) = plot(ExcSet.PropZ_Len./NLM.Len,Max.P_S2_max_z(1,:),'-c','LineWidth',1.25);% S2
          
          set(gca,'xLim', [  0,  1],...
                  'xTick',(  0.0 : 0.1 : 1.1),...
                  'yLim', [- 80,       +30],...
                  'yTick',[- 90 : 10 : +30],...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','normal');
          grid on;
          xlabel('Normalized propagation Z', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','normal');
          ylabel('Power (dB)', ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','normal');
          % 
          if SimMod.FLD_nPWR, % simulation with field
            title({'Power evolution vs. Propagated length'; ...
             ['7-wave CWODE, \delta\lambda_{OFS}=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),'nm',...
                          ', \Delta\lambda_{PP}=', num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),'nm']},...
              'FontName','Arial',...
              'FontSize',12,...
              'FontWeight','normal');
          else % SimMod.FLD_nPWR == 0, simulation with power and phase
            if SimMod.PSA_nPIA, % simulation in PSA
              %
            else % SimMod.PSA_nPIA == 0, simulation in PIA
              %
            end; % SimMod.PSA_nPIA
          end; % if-else SimMod.FLD_nPWR
          % 
          legend([f02(01),f02(02),f02(03),f02(04),f02(05),f02(06),f02(07)], ...
            {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
            'FontName','Arial',...
            'FontSize',12,...
            'FontWeight','Normal',...
            'Location','Best');
          
          saveas(gcf,['PropZ_Pevo_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
                      '_PP=',              num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),...
                      '.fig']);
          print(gcf,'-dtiff','-r300',...
                     ['PropZ_Pevo_7w_OFS=',num2str(ExcSet.Wvlen_ofs*1e9,'%3.1f'),...
                      '_PP=',              num2str(ExcSet.Dl_PPS_wl,    '%3.1f'),...
                      '.tif']);

%           subplot(2,1,2);
%           hold on;
%           f03(08) = plot(ExcSet.Dl_PPS_wl,Raw.P_P1_Log(:,1),'-b','LineWidth',1.25);% P1
%           f03(09) = plot(ExcSet.Dl_PPS_wl,Raw.P_P2_Log(:,1),'-g','LineWidth',1.25);% P2
%           f03(10) = plot(ExcSet.Dl_PPS_wl,Raw.P_SI_Log(:,1),'-k','LineWidth',1.25);% SI
%           f03(11) = plot(ExcSet.Dl_PPS_wl,Raw.P_P3_Log(:,1),'-y','LineWidth',1.25);% P3
%           f03(12) = plot(ExcSet.Dl_PPS_wl,Raw.P_P4_Log(:,1),'-r','LineWidth',1.25);% P4
%           f03(13) = plot(ExcSet.Dl_PPS_wl,Raw.P_S1_Log(:,1),'-m','LineWidth',1.25);% S1
%           f03(14) = plot(ExcSet.Dl_PPS_wl,Raw.P_S2_Log(:,1),'-c','LineWidth',1.25);% S2
%           
%           set(gca,'xLim', [  0, (SimMod.Freq_rang/125e9)],...
%             'xTick',(  0.0:SimMod.Freq_rang/125e10:SimMod.Freq_rang/125e9),...
%             'yLim', [- 80,   +25],...
%             'yTick',[- 80:10:+25],...
%             'FontName','Arial',...
%             'FontSize',14,...
%             'FontWeight','normal');
%           grid on;
%           xlabel('\Delta\lambda_{PP} (nm)', ...
%             'FontName','Arial',...
%             'FontSize',14,...
%             'FontWeight','normal');
%           ylabel('Signal gain (dB)', ...
%             'FontName','Arial',...
%             'FontSize',14,...
%             'FontWeight','normal');
%           if SimMod.FLD_nPWR, % simulation with field
%             title({'Power evolution vs. \Delta\lambda_{PP}'; ...
%               'CM-ODE of Field, \delta\lambda_{OFS}=0, 7-wave Numerical'}, ...
%               'FontName','Arial','FontSize',12,'FontWeight','normal');
%           else % SimMod.FLD_nPWR == 0, simulation with power and phase
%             if SimMod.PSA_nPIA, % simulation in PSA
%               
%             else % SimMod.PSA_nPIA == 0, simulation in PIA
%               
%             end; % SimMod.PSA_nPIA
%           end; % if-else SimMod.FLD_nPWR
%           legend([f02(01),f02(02),f02(03),f02(04),f02(05),f02(06),f02(07)], ...
%             {'P1';'P2';'SI';'P3';'P4';'S1';'S2';}, ...
%             'FontName','Arial',...
%             'FontSize',12,...
%             'FontWeight','normal',...
%             'Location','Southwest');
        else % pwr_evo == 0,
          %
        end; % end of if-else pwr_evo
        %-----------------------------------------------------------------------
        %% Fig.03 Signal gain vs. Propagated length and signal phase 3D
        if 1,
          %%
        else
          %
        end; % end of if-else 
        %-----------------------------------------------------------------------
    end; % end of switch SimMod.Scan_mode
  % end of case '3W1P' in switch SimMod.Wave_mode
  %-----------------------------------------------------------------------------
  case '4W2P', %
    % not support in this version
  %-----------------------------------------------------------------------------
  otherwise,   %
    %
  %-----------------------------------------------------------------------------
end; % end of switch SimMod.Wave_mode
%-------------------------------------------------------------------------------

end % end of function f_Visualization
%-------------------------------------------------------------------------------

%-------------------------------------------------------------------------------
% end of file f_Visualization.m
%-------------------------------------------------------------------------------